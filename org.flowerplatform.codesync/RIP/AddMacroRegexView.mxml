<?xml version="1.0" encoding="utf-8"?>
<!-- 
license-start

Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation version 3.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details, at <http://www.gnu.org/licenses/>.

Contributors:
Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.

license-end
-->
<!--
@author Cristina Constantinescu
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 implements="org.flowerplatform.flexutil.view_content_host.IViewContent, org.flowerplatform.flexutil.dialog.IDialog"
		 creationComplete="creationCompleteHandler(event)" xmlns:util="com.crispico.flower.util.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			import mx.validators.Validator;
			
			import org.flowerplatform.codesync.CodeSyncPlugin;
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.flexutil.FlexUtilAssets;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.action.IAction;
			import org.flowerplatform.flexutil.dialog.IDialogResultHandler;
			import org.flowerplatform.flexutil.view_content_host.IViewHost;
			
			private var _viewHost:IViewHost;
			
			private var resultHandler:IDialogResultHandler;
			
			public function setResultHandler(resultHandler:IDialogResultHandler):void {
				this.resultHandler = resultHandler;
			}
			
			public function get viewHost():IViewHost {
				return _viewHost;
			}
			
			public function set viewHost(value:IViewHost):void {
				_viewHost = value;				
				_viewHost.setIcon(CodeSyncPlugin.getInstance().getResourceUrl("images/common/add.png"));
				_viewHost.setLabel(CodeSyncPlugin.getInstance().getMessage("regex.macro.add.title"));
			}
			
			public function getActions(selection:IList):Vector.<IAction>{
				return null;
			}
			
			private function creationCompleteHandler(event:FlexEvent):void {
				viewHost.addToControlBar(buttonBar);
			}
			
			private function okHandler():void {
				// validate form
				if (Validator.validateAll(validators).length > 0) {
					return;
				}
				resultHandler.handleDialogResult([macroName.text, regex.text]);
				cancelHandler();
			}
			
			private function cancelHandler():void {
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);	
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>		
		<s:HGroup id="buttonBar" width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Button id="ok" label="{CommonPlugin.getInstance().getMessage('ok')}" click="okHandler()" width="80"/>
			<s:Button id="cancel" label="{CommonPlugin.getInstance().getMessage('cancel')}" click="cancelHandler()" width="80"/>			
		</s:HGroup>		
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
	</s:layout>
	
	<fx:Declarations>
		<fx:Array id="validators">
			<mx:StringValidator source="{macroName}" property="text" minLength="1"/>	
			<mx:StringValidator source="{regex}" property="text" minLength="1"/>				
		</fx:Array>	
	</fx:Declarations>	
	
	<s:Form id="form" height="100%" width="100%">	
		<s:FormItem label="{CodeSyncPlugin.getInstance().getMessage('regex.macro.name')}" width="100%">
			<s:TextInput id="macroName" width="100%" creationComplete="{callLater(macroName.setFocus)}"/>			
		</s:FormItem>	
		<s:FormItem label="{CodeSyncPlugin.getInstance().getMessage('regex.macro.regex')}" width="100%">
			<s:HGroup width="100%" verticalAlign="middle">
				<s:TextInput id="regex" width="100%" />
				<util:HintButton toolTip="{CodeSyncPlugin.getInstance().getMessage('regex.macro.add.tooltip')}"/>
			</s:HGroup>			
						
		</s:FormItem>		
	</s:Form>
	
</s:Group>