contentAssist.resourceIsNotInProject = The resource is not contained in a project.

ied.couldNotGetText = The text could not be obtained!
ied.couldNotSetText = The text could not be saved!
ied.regexParseError = Error parsing element's inplace editor text!

loadDesc.action.title = Show Descriptors
loadDesc.view.regenerate = Regenerate Descriptors
loadDesc.view.title = Descriptor List
loadDesc.view.regenerateResults = Regenerate Descriptors Results
loadDesc.view.regenerateNoError = No errors during regeneration

<<<<<<< HEAD
regex.perspective = Regex Modeling
regex.configs = RE Configs
regex.macros = RE Macros
regex.parsers = RE Parsers
regex.matches = RE Matches

regex.add = Add
regex.remove = Remove
regex.run = Run
regex.selectedConfig = Config: <font color='#0000A0'><b>{0}</b></font>
regex.selectedConfig.none = No Configuration selected

regex.editor = File: <b>{0}</b>
regex.editor.none = No CodeMirror editor selected!

regex.config.name = Name:
regex.config.exists = A configuration with name "{0}" already exists!

regex.config.add.title = Add Configuration
regex.config.add.error = Configuration cannot be created!

regex.config.remove.message = Are you sure you want to remove selected configuration?
regex.config.remove.error = Configuration cannot be removed!
regex.config.rename.error = Cannot rename regex configuration!
regex.config.modify.error = Cannot modify regex configuration!

regex.macro.name = Name:
regex.macro.regex = Regular Expression:

regex.macro.exists = A macro with name "{0}" already exists!

regex.macro.add.title = Add Macro
regex.macro.add.tooltip=\
<p>\
<b>^</b> - Line start<br/>\
<b>\\</b> - Backslash<br/>\
<b>\0nnn</b> - Octal character code<br/>\
<b>\xhh</b> - Hex character code<br/>\
<b>\&#117;hhhh</b> - Hex code for Unicode character<br/>\
<b>\t</b> - Tab<br/>\
<b>\R</b> - Line delimiter (platform independent)<br/>\
<b>\&#110;</b> - Newline<br/>\
<b>\r</b> - CR<br/>\
<b>\f</b> - FF<br/>\
<b>\a</b> - Beep<br/>\
<b>\e</b> - Esc<br/>\
<b>\cC</b> - Control character<br/>\
<b>.</b> - Any character<br/>\
<b>\d</b> - A digit<br/>\
<b>\D</b> - Not a digit<br/>\
<b>\s</b> - A whitespace<br/>\
<b>\S</b> - Not a whitespace<br/>\
<b>\w</b> - A alphanumeric (word character)<br/>\
<b>\W</b> - Not an alphanumeric<br/>\
<b>U|V</b> - Alternation U or V<br/>\
<b>\i</b> - Match of the capturing group i<br/>\
<b>\</b> - Quote next character<br/>\
<b>\Q</b> - Start quoting<br/>\
<b>\E</b> - End quoting<br/>\
<b>[ecl]</b> - Character set<br/>\
<b>[^ecl]</b> - Excluded character set<br/>\
<b>[c-l]</b> - Character range<br/>\
<b>&&</b> - Intersection of character sets<br/>\
<b>$</b> - Line end<br/>\
<b>\b</b> - Word beginning or end<br/>\
<b>\B</b> - Not a word beginning or end<br/>\
<b>\A</b> - Start of input<br/>\
<b>\G</b> - Previous match's end<br/>\
<b>\Z</b> - End of input, does not consider last line terminator<br/>\
<b>\z</b> - End of input<br/>\
<b>(Expr)</b> - Mark Expr as capturing group<br/>\
<b>(?ismd-ismd)</b> - Turn flags on or off<br/>\
<b>(?ismd-ismd:Expr)</b> - Turn flags on or off in Expr<br/>\
<b>(?:Expr)</b> - Non-capturing group<br/>\
<b>(?>Expr)</b> - Non-capturing atomic group<br/>\
<b>(?=Expr)</b> - Zero-width positive lookahead<br/>\
<b>(?!Expr)</b> - Zero-width negative lookahead<br/>\
<b>(?&lt;=Expr)</b> - Zero-width positive lookbehind<br/>\
<b>(?&lt;!Expr)</b> - Zero-width negative lookbehind<br/>\
<b>?</b> - Greedy match 0 or 1 times<br/>\
<b>*</b> - Greedy match 0 or more times<br/>\
<b>+</b> - Greedy match 1 or more times<br/>\
<b>{n}</b> - Greedy match exactly n times<br/>\
<b>{n,}</b> - Greedy match >= n times<br/>\
<b>{n,m}</b> - Greedy match >= n times but &lt;= m times<br/>\
<b>??</b> - Lazy match 0 or 1 times<br/>\
<b>*?</b> - Lazy match 0 or more times<br/>\
<b>+?</b> - Lazy match 1 or more times<br/>\
<b>{n}?</b> - Lazy match exactly n times<br/>\
<b>{n,}?</b> - Lazy match >= n times<br/>\
<b>{n,m}?</b> - Lazy match >= n times but &lt;= m times<br/>\
<b>?+</b> - Possessive match 0 or 1 times<br/>\
<b>*+</b> - Possessive match 0 or more times<br/>\
<b>++</b> - Possessive match 1 or more times<br/>\
<b>{n}+</b> - Possessive match exactly n times<br/>\
<b>{n,}+</b> - Possessive match >= n times<br/>\
<b>{n,m}+</b> - Possessive match >= n times but &lt;= m times</p>

regex.macro.remove.message = Are you sure you want to remove selected macro regex?
regex.macro.remove.error = Macro regex cannot be removed!
regex.macro.add.error = Macro regex cannot be created!

regex.parser.action = Action:
regex.parser.macroRegex = Regex with Macros:
regex.parser.add.title = Add Parser
regex.parser.exists = A parser with name "{0}" already exists!
regex.parser.add.error = Parser regex cannot be created!
regex.parser.remove.error = Parser regex cannot be removed!

regex.parser.remove.message = Are you sure you want to remove selected parsers?

regex.config.noConfigSelected.info = No regex Configuration selected!
regex.parser.noParserRegexSelected.info = No Parser regex selected!
regex.noCodeMirrorEditorOpen.info = No CodeMirror editor selected!

regex.run.extensionNotInConfig = File extension not supported by current selected regex configuration!
regex.run.error = Exception thrown while running action:

wizard.perspective = Flower App Wizard
wizard.elements = Wizard Elements
wizard.dependencies = Wizard Dependencies

wizard.add = Add
wizard.add.attribute = Add Attribute
wizard.remove = Remove
wizard.refresh = Refresh
wizard.generate = Generate
wizard.drag = Drag

wizard.selectedElement.info = Wizard Element: <font color='#0000A0'><b>{0}</b></font>
wizard.selectedElement.none = No Wizard Element selected

wizard.dependency.labelWithDepFormat = <font color='#0000A0'>{0}</font> as <i>{1}</i>
wizard.dependency.labelWithoutDepFormat = <i>{0}</i>

relation.error = {0}\n{1}

wizard.relation.error = Cannot create "{0}" dependency!
wizard.relationRequired = The parent "{0}" dependency must be generated first!
wizard.relationExists = Relation already exists!\nIt's target is: '{0}'!

wizard.noDiagramEditorAvailable = There is no diagram editor available!

# {0} - category name
action.expandCompartment = Expand {0} compartment
