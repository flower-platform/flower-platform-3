<?xml version="1.0" encoding="utf-8"?>
<!-- 
license-start

Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation version 3.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details, at <http://www.gnu.org/licenses/>.

Contributors:
Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.

license-end
-->
<!--
@author Victor Badila
-->

<s:Group top="50px"
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
		 creationComplete="creationCompleteHandler(event)"
		 implements="org.flowerplatform.flexutil.popup.IPopupContent, org.flowerplatform.flexutil.dialog.IDialog">		 
	
	<fx:Script>		
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.CommunicationPlugin;
			import org.flowerplatform.communication.service.InvokeServiceMethodServerCommand;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.dialog.IDialogResultHandler;
			import org.flowerplatform.flexutil.popup.IAction;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.web.common.WebCommonPlugin;
			
			[Bindable]
			public var dataList:ArrayList
			
			private var resultHandler:IDialogResultHandler;
			
			public var organizationName:String;
			
			private var _popupHost:IPopupHost;	
			
			public function setResultHandler(resultHandler:IDialogResultHandler):void {
				this.resultHandler = resultHandler;
			}
			
			public function getActions(selection:IList):Vector.<IAction>{
				return null;
			}
			
			public function getSelection():IList {
				return null;
			}
			
			public function get popupHost():IPopupHost {
				return _popupHost;
			}
			
			public function set popupHost(value:IPopupHost):void {
				_popupHost = value;
				popupHost.setLabel(WebCommonPlugin.getInstance().getMessage('svn.ui.checkout.workingDirectorySelection.title'));
			}
			
			private function creationCompleteHandler(event:FlexEvent):void {				
				popupHost.addToControlBar(buttonBar);
			}
			
			public function closePanel(arg:Boolean):void {
				if (arg) {					
					resultHandler.handleDialogResult(myList.selectedItem)
				}
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);
			}		
			
			private function getProjectsCallbackHandler(result:ArrayCollection):void {
				myList.dataProvider = result;
			}
			
			public function init(organizationName:String):void {				
				CommunicationPlugin.getInstance().bridge.sendObject(
					new InvokeServiceMethodServerCommand("svnService", "getWorkingDirectoriesForOrganization", [organizationName], this,getProjectsCallbackHandler ));
			}
			
			private function okHandler():void {				
				closePanel(true);
			}
			
			private function cancelHandler():void {				
				closePanel(false);	
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>		
		
		<s:HGroup id="buttonBar" width="100%" horizontalAlign="center">			
			<s:Button id="ok" label="{CommonPlugin.getInstance().getMessage('ok')}" click="okHandler()" width="80"/>
			<s:Button id="cancel" label="{CommonPlugin.getInstance().getMessage('cancel')}" click="cancelHandler()" width="80"/>			
		</s:HGroup>
		
	</fx:Declarations>	
	
		<s:layout>
			<s:VerticalLayout/>
		</s:layout>	
		<s:List dataProvider="{dataList}" id="myList" height="100%" width="100%">
		</s:List>
	
	
</s:Group>
