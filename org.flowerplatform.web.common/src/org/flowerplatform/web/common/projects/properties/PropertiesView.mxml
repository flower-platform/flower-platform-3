<?xml version="1.0" encoding="utf-8"?>
<!--
	@author Cristina Constantinescu
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:mobile="org.flowerplatform.flexutil.selectiontrianglelist.mobile.*"
		 implements="org.flowerplatform.flexutil.popup.IPopupContent"
		 creationComplete="creationCompleteHandler(event)" xmlns:selectiontrianglelist="org.flowerplatform.flexutil.selectiontrianglelist.*">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.tree.remote.TreeNode;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.popup.IAction;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.flexutil.selectiontrianglelist.GradientBackgroundListSkin;
			import org.flowerplatform.flexutil.selectiontrianglelist.mobile.GradientBackgroundMobileListSkin;
			import org.flowerplatform.web.common.WebCommonPlugin;
			
			import spark.events.IndexChangeEvent;

			public var node:TreeNode;
			
			private var pages:Dictionary = new Dictionary();
			
			private var _popupHost:IPopupHost;
			
			protected function creationCompleteHandler(event:FlexEvent):void {
				var pages:ArrayList = new ArrayList();
				for (var i:int = 0; i < WebCommonPlugin.getInstance().projectPropertyProviders.length; i++) {
					var page:IPropertyPageProvider = IPropertyPageProvider(WebCommonPlugin.getInstance().projectPropertyProviders.getItemAt(i));
					pages.addItem(page.getLabel());
				}
				list.dataProvider = pages;
				
				popupHost.addToControlBar(buttonBar);
			}
			
			public function get popupHost():IPopupHost {
				return _popupHost;
			}
			
			public function set popupHost(value:IPopupHost):void {
				_popupHost = value;				
				popupHost.setLabel("Properties");
				popupHost.setIcon(WebCommonPlugin.getInstance().getResourceUrl("images/project.gif"));
			}
			
			public function getSelection():IList {
				return null;
			}
			
			public function getActions(selection:IList):Vector.<IAction> {
				return null;
			}
			
			protected function changeHandler(event:IndexChangeEvent):void {
				if (contentArea.numElements == 1) {
					pages[event.oldIndex] = contentArea.getElementAt(0);
					contentArea.removeElementAt(0);
				}				
				var child:IPropertyPage;			
				if (pages[event.newIndex] != null) {
					child = pages[event.newIndex];
				} else {
					child = IPropertyPageProvider(WebCommonPlugin.getInstance().projectPropertyProviders.getItemAt(list.selectedIndex)).getPage();
					child.setSelectedNode(node);
					child.percentHeight = 100;
					child.percentWidth = 100;
				}				
				pages[event.newIndex] = child;
				contentArea.addElement(child);
			}
			
			public function okHandler():void {
				for (var key:Object in pages) {
					IPropertyPage(pages[key]).okHandler();
				}
				cancelHandler();
			}
			
			public function cancelHandler():void {
				for (var key:Object in pages) {
					IPropertyPage(pages[key]).cancelHandler();
				}
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);	
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HGroup id="buttonBar" width="100%" horizontalAlign="right" verticalAlign="middle">
			<s:Button id="ok" label="{CommonPlugin.getInstance().getMessage('ok')}" click="okHandler()" width="80"/>
			<s:Button id="cancel" label="{CommonPlugin.getInstance().getMessage('cancel')}" click="cancelHandler()" width="80"/>			
		</s:HGroup>	
		
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" />
	</s:layout>
	<s:HGroup width="100%" height="100%" gap="5">
		
		<selectiontrianglelist:GradientBackgroundList			
			skinClass="{FlexUtilGlobals.getInstance().isMobile ?  GradientBackgroundMobileListSkin : GradientBackgroundListSkin}"
			id="list"
			width="20%" height="100%"
			sidesBorderStyle="right_border" borderColor="#CCCCCC" paddingLeft="5"			
			change="changeHandler(event)">
			<selectiontrianglelist:itemRenderer>
				<fx:Component>
					<selectiontrianglelist:SelectionTriangleItemRenderer height="30" />
				</fx:Component>
			</selectiontrianglelist:itemRenderer>
		</selectiontrianglelist:GradientBackgroundList>
		
		<s:Group id="contentArea" width="80%" height="100%" />
	</s:HGroup>	
</s:Group>
