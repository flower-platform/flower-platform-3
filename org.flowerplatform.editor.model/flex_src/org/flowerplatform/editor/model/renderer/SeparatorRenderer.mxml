<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	Contributors:
	  Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.
 
	license-end
-->
<s:DataRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx"
				implements="org.flowerplatform.flexdiagram.renderer.IDiagramShellAware" 
				xmlns:renderer="org.flowerplatform.editor.model.renderer.*"
				width="100%">
	
	<s:layout>
		<s:HorizontalLayout/>
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import org.flowerplatform.editor.model.EditorModelPlugin;
			import org.flowerplatform.editor.model.NotationDiagramShell;
			import org.flowerplatform.editor.model.remote.NotationDiagramEditorStatefulClient;
			import org.flowerplatform.emf_model.notation.Node;
			import org.flowerplatform.emf_model.notation.View;
			import org.flowerplatform.flexdiagram.DiagramShell;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			
			private var _diagramShell:DiagramShell;
			
			public var codeSyncType:String;
			
			[Bindable]
			public var title:String;
			
			[Bindable]
			public var newChildIcon:String;
			
			public function get diagramShell():DiagramShell {
				return _diagramShell;
			}
			
			public function set diagramShell(value:DiagramShell):void {
				_diagramShell = value;
			}
			
			override public function set data(value:Object):void {
				super.data = value;
				if (data != null) {
					var viewDetails:Object = View(data).viewDetails;
					if (viewDetails != null) {
						codeSyncType = viewDetails["codeSyncType"];
						title = viewDetails["title"];
						newChildIcon = viewDetails["newChildIcon"];
					}
				}
			}
			
			protected function collapse():void {
				NotationDiagramEditorStatefulClient(NotationDiagramShell(diagramShell).editorStatefulClient).service_collapseCompartment(Node(data).id);
			}
			
			protected function addNew():void {
				var parentView:View = View(DataRenderer(parent).data);
				NotationDiagramEditorStatefulClient(NotationDiagramShell(diagramShell).editorStatefulClient).service_addNew(parentView.id, codeSyncType, null);
			}
			
			protected function getResourceUrl(resource:String):String {
				return FlexUtilGlobals.getInstance().createAbsoluteUrl(resource);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:VGroup width="100%">
		
		<s:Line width="100%">
			<s:stroke>
				<s:SolidColorStroke color="#000000" weight="1" caps="square"/>
			</s:stroke>
		</s:Line>
		
		<s:HGroup width="100%" paddingLeft="2" paddingRight="2">
			
			<s:Button icon="{getResourceUrl(EditorModelPlugin.getInstance().getResourceUrl('images/obj16/collapseall.gif'))}" 
					  click="{collapse()}"
					  width="16" height="16"
					  styleName="borderlessButton"/>
			<s:Label text="{title}" width="100%" textAlign="center"/>
			<s:Button icon="{EditorModelPlugin.getInstance().getComposedImageUrl(newChildIcon)}" 
					  click="{addNew()}"
					  width="16" height="16"
					  styleName="borderlessButton"/>
		</s:HGroup>
	</s:VGroup>
	
</s:DataRenderer>