<?xml version="1.0" encoding="utf-8"?>
<!---
@author Cristian Spiescu
-->
<popup:WrapperViewBase implements="org.flowerplatform.flexutil.popup.IPopupHost" creationComplete="creationCompleteHandler()"
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="SplitView" xmlns:mobile="org.flowerplatform.web.mobile.*" xmlns:popup="org.flowerplatform.web.mobile.popup.*">
	<fx:Declarations>
		<mobile:MainNavigatorContent id="mainNavigatorContent" navigator="{navigator}"/>
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayList;
			import mx.core.IVisualElement;
			
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.layout.ViewLayoutData;
			import org.flowerplatform.flexutil.popup.IPopupContent;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.web.common.explorer.ExplorerViewProvider;
			
			private var _oneViewMode:Boolean = true;
			
			private var _oneViewModeLeftViewActive:Boolean = true;
			
			public var leftAreaPercentWidth:int = 30;
			
			public var leftComponents:ArrayList = new ArrayList();
			
			public var rightComponents:ArrayList = new ArrayList();
			
			private var _leftActiveComponent:IVisualElement;
			
			private var _rightActiveComponent:IVisualElement;

			public function get leftActiveComponent():IVisualElement {
				return _leftActiveComponent;
			}

			public function set leftActiveComponent(value:IVisualElement):void {
				_leftActiveComponent = value;
				rearrangeLayout();
			}

			public function get rightActiveComponent():IVisualElement {
				return _rightActiveComponent;
			}

			public function set rightActiveComponent(value:IVisualElement):void {
				_rightActiveComponent = value;
				rearrangeLayout();
			}

			[Bindable]
			public function get oneViewMode():Boolean {
				return _oneViewMode;
			}

			public function set oneViewMode(value:Boolean):void {
				_oneViewMode = value;
				rearrangeLayout();
			}
			
			[Bindable]
			public function get oneViewModeLeftViewActive():Boolean {
				return _oneViewModeLeftViewActive;
			}
			
			public function set oneViewModeLeftViewActive(value:Boolean):void {
				_oneViewModeLeftViewActive = value;
				rearrangeLayout();
			}
			
			protected function rearrangeLayout():void {
				this.removeAllElements();
				if (oneViewMode) {
					// one view
					if (oneViewModeLeftViewActive) {
						// one view / left
						if (leftActiveComponent != null) {
							addElement(leftActiveComponent);
							leftActiveComponent.percentHeight = 100;
							leftActiveComponent.percentWidth = 100;
						}
					} else {
						// one view / right
						if (rightActiveComponent != null) {
							addElement(rightActiveComponent);
							rightActiveComponent.percentHeight = 100;
							rightActiveComponent.percentWidth = 100;
						}
					}
				} else {
					// 2 views
					if (leftActiveComponent != null) {
						addElement(leftActiveComponent);
						leftActiveComponent.percentHeight = 100;
						leftActiveComponent.percentWidth = leftAreaPercentWidth;
					}
					if (rightActiveComponent != null) {
						addElement(rightActiveComponent);
						rightActiveComponent.percentHeight = 100;
						rightActiveComponent.percentWidth = 100;
					}					
				}
			}

			protected function creationCompleteHandler():void {
				navigationContent = mainNavigatorContent.navigatorContent.concat(navigationContent);
				leftActiveComponent = FlexUtilGlobals.getInstance().composedViewProvider.createView(new ViewLayoutData(ExplorerViewProvider.ID));
				IPopupContent(leftActiveComponent).popupHost = this;
				refreshActions(activePopupContent);
				
				rightActiveComponent = new Button();
			}
			
			override public function get activePopupContent():IPopupContent {
				return IPopupContent(leftActiveComponent);
			}
			
		]]>
	</fx:Script>
	<popup:layout>
		<s:HorizontalLayout/>
	</popup:layout>
	<popup:navigationContent>
		<s:Button id="switchLeftRight" label="Sw LR" visible="{oneViewMode}" includeInLayout="{switchLeftRight.visible}" click="oneViewModeLeftViewActive = !oneViewModeLeftViewActive"/>
		<s:Button id="switch1" label="Sw 1" visible="{!oneViewMode}" includeInLayout="{switch1.visible}" click="oneViewMode = true"/>
		<s:Button id="switch2" label="Sw 2" visible="{oneViewMode}" includeInLayout="{switch2.visible}" click="oneViewMode = false"/>
	</popup:navigationContent>
</popup:WrapperViewBase>
