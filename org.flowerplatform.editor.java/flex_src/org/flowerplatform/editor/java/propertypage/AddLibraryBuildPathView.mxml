<?xml version="1.0" encoding="utf-8"?>
<!--
@author Cristina Constantinescu
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 implements="org.flowerplatform.flexutil.popup.IPopupContent, org.flowerplatform.flexutil.dialog.IDialog"
		 creationComplete="creationCompleteHandler(event)" xmlns:tree="org.flowerplatform.communication.tree.*">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import org.flowerplatform.web.common.projects.remote.WorkingDirectoryTreeStatefulClient;
			
			import mx.collections.IList;
			import mx.events.FlexEvent;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.CommunicationPlugin;
			import org.flowerplatform.communication.tree.remote.GenericTreeStatefulClient;
			import org.flowerplatform.communication.tree.remote.PathFragment;
			import org.flowerplatform.communication.tree.remote.TreeNode;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.dialog.IDialogResultHandler;
			import org.flowerplatform.flexutil.popup.IAction;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			
			private var _popupHost:IPopupHost;			
			private var resultHandler:IDialogResultHandler;
						
			public var node:TreeNode;
			
			public function setResultHandler(resultHandler:IDialogResultHandler):void {
				this.resultHandler = resultHandler;
			}
			
			public function get popupHost():IPopupHost {
				return _popupHost;
			}
			
			public function set popupHost(value:IPopupHost):void {
				_popupHost = value;				
				popupHost.setLabel("Add Library");				
			}
			
			public function getActions(selection:IList):Vector.<IAction>{
				return null;
			}
			
			public function getSelection():IList {
				return null;
			}
			
			private function creationCompleteHandler(event:FlexEvent):void {
				popupHost.addToControlBar(buttonBar);
				
				var statefulClient:GenericTreeStatefulClient = new WorkingDirectoryTreeStatefulClient();
				
				tree.statefulClient = statefulClient;				
				statefulClient.treeList = tree;
				
				CommunicationPlugin.getInstance().statefulClientRegistry.register(statefulClient, null);
				
				popupHost.showSpinner(CommonPlugin.getInstance().getMessage("spinner.gettingData"));
				
				var fullPath:ArrayCollection = node.getPathForNode();
				var firstSegmentName = PathFragment(fullPath.getItemAt(0)).name;
				var lastSegmentName = PathFragment(fullPath.getItemAt(fullPath.length - 1)).name;
				
				// populate with data from given working directory
				tree.statefulClient.context[WorkingDirectoryTreeStatefulClient.WORKING_DIRECTORY_KEY] = lastSegmentName;
				tree.statefulClient.context[WorkingDirectoryTreeStatefulClient.ORGANIZATION_KEY] = firstSegmentName;
				tree.statefulClient.openNode(null, this, getData_callbackHandler);				
			}
			
			private function getData_callbackHandler(value:Object):void {
				popupHost.hideSpinner();
			}
			
			private function okHandler():void {				
				resultHandler.handleDialogResult(tree.getSelection().getItemAt(0));
				cancelHandler();
			}
			
			private function cancelHandler():void {
				CommunicationPlugin.getInstance().statefulClientRegistry.unregister(tree.statefulClient, null);
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);	
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>		
		<s:HGroup id="buttonBar" width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Button id="ok" label="{CommonPlugin.getInstance().getMessage('ok')}" click="okHandler()" width="80"/>
			<s:Button id="cancel" label="{CommonPlugin.getInstance().getMessage('cancel')}" click="cancelHandler()" width="80"/>			
		</s:HGroup>		
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
	</s:layout>
	
	<tree:GenericTreeList width="100%" height="100%" id="tree" dispatchEnabled="false"  />
	
</s:Group>