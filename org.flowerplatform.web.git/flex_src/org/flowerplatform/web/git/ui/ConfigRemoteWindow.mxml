<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	Contributors:
	  Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.
 
	license-end
-->
<!--
@author Cristina Constantinescu
-->
<ns:Wizard xmlns:ns="com.crispico.flower.util.popup.*"
		   titleIconURL="{GitPlugin.getInstance().getResourceUrl('images/full/obj16/remote_entry_tbl.gif')}"
		   title="{GitPlugin.getInstance().getMessage('git.action.createRemote.label')}"
		   width="500" height="460" minWidth="500" minHeight="460"
		  
		   xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:panel="com.crispico.flower.util.panel.*" 
		   xmlns:components="com.crispico.flower.mp.web.git.repository.ui.components.*" 
		   xmlns:component="org.flowerplatform.web.git.ui.component.*" >
	
	<mx:Script>
		<![CDATA[
			import com.crispico.flower.util.spinner.ModalSpinner;
			
			import mx.collections.ArrayCollection;
			import mx.validators.Validator;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.tree.remote.TreeNode;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.Utils;
			import org.flowerplatform.web.git.GitPlugin;
			import org.flowerplatform.web.git.dto.RemoteConfig;
			
			public var node:TreeNode;
			
			[Bindable]
			public var remoteConfig:RemoteConfig = new RemoteConfig();
			
			protected override function creationCompleteHandler():void {
				super.creationCompleteHandler();
				
				if (remoteConfig.name) {
					Utils.makePseudoDisabled(remoteName);
					callLater(tiUri.setFocus);
				} else {
					callLater(remoteName.setFocus);
				}
			}
						
			/**
			 * 
			 */
			protected override function finishClickHandler():void {
				// validate form
				if (Validator.validateAll(validators).length > 0) {
					return;
				}
				var remotes:ArrayCollection = node.children;
				if (!remoteConfig.name && node.children) {
					for each (var remote:TreeNode in node.children) {
						if (remote.pathFragment.name == remoteName.text) {
							FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
								.setTitle(CommonPlugin.getInstance().getMessage("error"))
								.setText(GitPlugin.getInstance().getMessage("git.createRemoteWizard.remoteExists", [remoteName.text]))
								.showMessageBox();
							return;
						}
					}
				}
				ModalSpinner.addModalSpinner(this, CommonPlugin.getInstance().getMessage("spinner.processing"));
				
				remoteConfig.name = remoteName.text;
				remoteConfig.uri = tiUri.text;
								
				GitPlugin.getInstance().service.configRemote(
					node, remoteConfig, 
					this, configRemoteCallbackHandler);

			}
						
			private function configRemoteCallbackHandler(value:Boolean):void {
				ModalSpinner.removeModalSpinner(this);
				if (value) {
					super.finishClickHandler();
				}
			}
			
		]]>
	</mx:Script>
	
	<mx:Array id="validators">
		<mx:StringValidator source="{remoteName}" property="text" minLength="1"/>		
		<mx:StringValidator source="{tiUri}" property="text" minLength="1"/>			
	</mx:Array>	
	
	<ns:states>				
		<mx:State name="0">			
			<mx:SetProperty target="{wizardTitle}" name="text" value="{GitPlugin.getInstance().getMessage('git.createRemoteWizard.subtitle')}"/>
			<mx:SetProperty target="{next}" name="visible" value="false"/>
			<mx:SetProperty target="{back}" name="visible" value="false"/>
			
			<mx:AddChild relativeTo="{contentArea}">
				<panel:CustomTitlePanel headerHeight="0" borderStyle="none"
										width="100%" height="100%">							
					<mx:HBox width="100%">
						<mx:Label text="{GitPlugin.getInstance().getMessage('git.createRemoteWizard.remoteName')}" />
						<mx:TextInput id="remoteName" width="100%" text="{remoteConfig.name}"/>							
					</mx:HBox>	
					<mx:HBox width="100%">
						<mx:Label text="{GitPlugin.getInstance().getMessage('git.uri.label')}" />
						<mx:TextInput id="tiUri" width="100%" text="{remoteConfig.uri}" />
					</mx:HBox>
				</panel:CustomTitlePanel>				
			</mx:AddChild>
		</mx:State>		
	</ns:states>
</ns:Wizard>