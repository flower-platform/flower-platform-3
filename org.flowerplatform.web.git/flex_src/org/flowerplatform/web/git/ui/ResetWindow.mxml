<?xml version="1.0" encoding="utf-8"?>
<!--
	@author Cristina Constantinescu
-->
<popup:Wizard xmlns:mx="http://www.adobe.com/2006/mxml" 
			  xmlns:popup="com.crispico.flower.util.popup.*" xmlns:components="com.crispico.flower.mp.web.git.repository.ui.components.*"
			  
			  width="550" height="450" minWidth="550" minHeight="450"
			  showCloseButton="true" 
			  
			  title="{GitPlugin.getInstance().getMessage('git.resetPage.title')}"
			  titleIconURL="{GitPlugin.getInstance().getResourceUrl('images/full/obj16/rebase.gif')}" xmlns:component="org.flowerplatform.web.git.ui.component.*">
	
	<mx:Script>
		<![CDATA[
			import com.crispico.flower.util.spinner.ModalSpinner;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.CommunicationPlugin;
			import org.flowerplatform.communication.tree.remote.GenericTreeStatefulClient;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.web.git.BranchTreeStatefulClient;
			import org.flowerplatform.web.git.GitPlugin;
			import org.flowerplatform.web.git.dto.GitActionDto;
			
			[Bindable]
			public var dto:GitActionDto;
			
			protected override function creationCompleteHandler():void {
				super.creationCompleteHandler();
				wizardImage.source = GitPlugin.getInstance().getResourceUrl("images/newconnect_wizban.png");
				
				var statefulClient:GenericTreeStatefulClient = new BranchTreeStatefulClient();
				
				branchPage.tree.statefulClient = statefulClient;				
				statefulClient.treeList = branchPage.tree;
				
				CommunicationPlugin.getInstance().statefulClientRegistry.register(statefulClient, null);
				
				ModalSpinner.addModalSpinner(this, CommonPlugin.getInstance().getMessage("spinner.gettingData"));
				branchPage.tree.statefulClient.openNode(dto.repositoryNode, this, getData_callbackHandler);
			}
			
			private function getData_callbackHandler(value:Object):void {
				ModalSpinner.removeModalSpinner(this);
			}
			
			protected override function finishClickHandler():void {	
				var branch:String = branchPage.getSelectedBranch();
				if (branch == null) {
					FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
						.setTitle(CommonPlugin.getInstance().getMessage("error"))
						.setText(GitPlugin.getInstance().getMessage("git.merge.selectRef"))
						.showMessageBox();					
					return;
				}
				GitPlugin.getInstance().service.reset(dto.repository, branch, int(resetTypeGroup.selectedValue), this, rebase_callbackHandler);
			}
			
			private function rebase_callbackHandler(result:Object):void {
				super.finishClickHandler();				
			}
			
			public override function closeForm():void {	
				CommunicationPlugin.getInstance().statefulClientRegistry.unregister(branchPage.tree.statefulClient, null);
				super.closeForm();
			}
			
		]]>
	</mx:Script>
	
	<popup:states>				
		<mx:State name="0">			
			<mx:SetProperty target="{wizardTitle}" name="text" value="{GitPlugin.getInstance().getMessage('git.resetPage.subTitle', [dto.repositoryNode.pathFragment.name])}"/>
			<mx:SetProperty target="{wizardDescription}" name="text" value="{GitPlugin.getInstance().getMessage('git.resetPage.description')}"/>
			<mx:SetProperty target="{finish}" name="label" value="{GitPlugin.getInstance().getMessage('git.resetPage.title')}"/>
			<mx:SetProperty target="{next}" name="visible" value="false"/>
			<mx:SetProperty target="{back}" name="visible" value="false"/>
			
			<mx:AddChild relativeTo="{contentArea}">
				<mx:VBox width="100%" height="100%">
					<component:BranchSelectionPage id="branchPage" width="100%" height="100%" />	
					
					<mx:Label text="{GitPlugin.getInstance().getMessage('git.resetPage.resetType')}" />
					<mx:RadioButtonGroup id="resetTypeGroup" />
					<mx:RadioButton groupName="resetTypeGroup" 									        
									label="{GitPlugin.getInstance().getMessage('git.resetPage.softType')}" 
									width="100%"
									selected="true"
									value="0"/>
					<mx:RadioButton groupName="resetTypeGroup" 									        
									label="{GitPlugin.getInstance().getMessage('git.resetPage.mixedType')}" 
									width="100%"
									selected="true"
									value="1"/>
					<mx:RadioButton groupName="resetTypeGroup" 											        
									label="{GitPlugin.getInstance().getMessage('git.resetPage.hardType')}"									
									width="100%"
									value="2"/>		
				</mx:VBox>				
			</mx:AddChild>
		</mx:State>		
	</popup:states>
	
</popup:Wizard>
