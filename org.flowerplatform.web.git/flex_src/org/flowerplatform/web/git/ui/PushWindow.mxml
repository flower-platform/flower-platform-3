<?xml version="1.0" encoding="utf-8"?>
<!--
 @author Cristina Constantinescu
 @flowerModelElementId _8nMYwHE5EeK0WoOyJtfqdw
-->
<ns:Wizard xmlns:ns="com.crispico.flower.util.popup.*"
		   titleIconURL="{GitPlugin.getInstance().getResourceUrl('images/full/obj16/push.gif')}"
		   title="{GitPlugin.getInstance().getMessage('git.action.push.label')}"
		   width="500" height="450" minWidth="500" minHeight="450"
		   xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:panel="com.crispico.flower.util.panel.*" xmlns:component="org.flowerplatform.web.git.ui.component.*" >

	<mx:Script>
		<![CDATA[
			import com.crispico.flower.util.spinner.ModalSpinner;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.tree.remote.TreeNode;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.web.git.GitPlugin;
			import org.flowerplatform.web.git.dto.ConfigFetchPushPageDto;
			import org.flowerplatform.web.git.dto.RemoteConfig;
			
			public var node:TreeNode;
			
			[Bindable]
			private var remoteConfig:RemoteConfig;
			
			protected override function creationCompleteHandler():void {
				super.creationCompleteHandler();
				
				ModalSpinner.addModalSpinner(this, CommonPlugin.getInstance().getMessage("spinner.gettingData"));
				GitPlugin.getInstance().service.
					getFetchPushConfigData(node, false, this, getFetchDataCallbackHandler);
			}
			
			private function getFetchDataCallbackHandler(data:ConfigFetchPushPageDto):void {
				ModalSpinner.removeModalSpinner(this);
				if (data == null) {
					closeForm();
				} else {
					repoSelectionPage.remotes.dataProvider = data.remoteConfigs;
				}
			}
			
			protected override function nextClickHandler():void {
				super.nextClickHandler();
				if (currentState == "1") {
					if (repoSelectionPage.group.selection == repoSelectionPage.remoteConfig) {					
						refSpecPage.refMappings = repoSelectionPage.getRemoteConfig().pushMappings;
						remoteConfig = repoSelectionPage.getRemoteConfig();
						cbSaveConfig.visible = true;
					} else {						
						refSpecPage.refMappings.removeAll();
						cbSaveConfig.visible = false;						
					}
					cbSaveConfig.selected = false;
				}
			}
			
			/**
			 * @flowerModelElementId _JvFcEHE6EeK0WoOyJtfqdw
			 */
			protected override function finishClickHandler():void {				
				var pushConfig:RemoteConfig = new RemoteConfig();
				pushConfig.name = remoteConfig.name;
				pushConfig.uri = remoteConfig.uri;
				if (currentState == "0") {
					if (repoSelectionPage.group.selection == repoSelectionPage.customUri) {
						if (repoSelectionPage.getURI().length == 0) {
							FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
								.setTitle(CommonPlugin.getInstance().getMessage("error"))
								.setText(GitPlugin.getInstance().getMessage("git.createRemoteWizard.pushUriIsEmpty"))
								.showMessageBox();							
							return;
						}
						pushConfig.uri = repoSelectionPage.getURI();
						
					} else {
						pushConfig = repoSelectionPage.getRemoteConfig();
					}
				} else {					
					pushConfig.pushMappings = refSpecPage.getRefMappings();
				}
				
				ModalSpinner.addModalSpinner(this, CommonPlugin.getInstance().getMessage("spinner.processing"));				
				GitPlugin.getInstance().service.push(node, pushConfig, cbSaveConfig.selected, this, fetchCallbackHandler);
			}
			
			private function fetchCallbackHandler(value:Boolean):void {
				ModalSpinner.removeModalSpinner(this);
				if (value) {
					super.finishClickHandler();
				}
			}
			
		]]>
	</mx:Script>
	
	<ns:states>				
		<mx:State name="0">			
			<mx:SetProperty target="{wizardTitle}" name="text" value="{GitPlugin.getInstance().getMessage('git.repoSelection.title')}"/>					
			<mx:SetProperty target="{wizardDescription}" name="text" value="{GitPlugin.getInstance().getMessage('git.repoSelection.description')}"/>
			
			<mx:AddChild relativeTo="{contentArea}">
				<component:RepositorySelectionPage id="repoSelectionPage" width="100%" height="100%" 
													selectConfiguredRemotes="true" isFetchConfig="false"/>	
			</mx:AddChild>
		</mx:State>
		
		<mx:State name="1">			
			<mx:SetProperty target="{wizardTitle}" name="text" value="{GitPlugin.getInstance().getMessage('git.pushSpecPage.title')}"/>					
			<mx:SetProperty target="{wizardDescription}" name="text" value="{GitPlugin.getInstance().getMessage('git.pushSpecPage.subtitle', [remoteConfig.name])}"/>
			
			<mx:AddChild relativeTo="{contentArea}">
				<component:RefSpecPage id="refSpecPage" width="100%" height="100%"/>	
			</mx:AddChild>
			<mx:AddChild relativeTo="{contentArea}">
				<ns:CustomTitlePanel xmlns:mx="http://www.adobe.com/2006/mxml" 									
									 headerHeight="0" borderStyle="none"									 
									 xmlns:ns="com.crispico.flower.util.panel.*">				
					<mx:VBox width="100%" height="100%" paddingTop="3">
						<mx:CheckBox id="cbSaveConfig" label="{GitPlugin.getInstance().getMessage('git.refSpecPage.saveSpec', [remoteConfig.name])}" />
					</mx:VBox>
				</ns:CustomTitlePanel>			
			</mx:AddChild>
		</mx:State>
		
	</ns:states>
</ns:Wizard>