<?xml version="1.0" encoding="utf-8"?>
<!---
	@author Cristina Constantinescu
-->
<s:IconItemRenderer								
				xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 				
				creationComplete="creationCompleteHandler(event)" xmlns:model="org.flowerplatform.flexdiagram.samples.mindmap.model.*"	
				verticalAlign="middle" minHeight="22" paddingLeft="2">
	
	<fx:Script>
		<![CDATA[
			import mx.core.IVisualElementContainer;
			import mx.events.FlexEvent;
			import mx.events.PropertyChangeEvent;
			import mx.events.ResizeEvent;
			
			import org.flowerplatform.flexdiagram.mindmap.MindMapDiagramShell;

			private static const CIRCLE_RADIUS:int = 3;
								
			override public function set data(value:Object):void {
				if (super.data != null) {
					data.removeEventListener(PropertyChangeEvent.PROPERTY_CHANGE, modelChangedHandler);
				}
				super.data = value;
			
				if (data != null) {
					x = data.x;
					y = data.y;
					measuredWidth = data.width;
					measuredHeight = data.height;
					label = data.text;
					data.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, modelChangedHandler);
				}
			}
			
			private function modelChangedHandler(event:PropertyChangeEvent):void {
				switch (event.property) {
					case "x":
						x = data.x;
						break;
					case "y":
						y = data.y;
						break;
					case "height":
						measuredHeight = data.height;
						break;
					case "width":
						measuredWidth = data.width;
						break;
					case "expanded":
						invalidateDisplayList();
						break;
					case "text":
						label = data.text;
				}
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void {			
				super.updateDisplayList(unscaledWidth, unscaledHeight);
				
				graphics.clear();
				graphics.lineStyle(1, 0x808080);
				graphics.beginFill(0xCCCCCC, 0);
				graphics.drawRoundRect(0, 0, unscaledWidth, unscaledHeight, 10, 10);		
			
				if (data.children.length > 0 && data.expanded == false) {
					if (data.side == MindMapDiagramShell.LEFT) {
						graphics.drawCircle(-CIRCLE_RADIUS, height/2, CIRCLE_RADIUS);
					} else if (data.side == MindMapDiagramShell.RIGHT) {						
						graphics.drawCircle(width + CIRCLE_RADIUS, height/2, CIRCLE_RADIUS);
					}
				}
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void {				
				addEventListener(ResizeEvent.RESIZE, resizeHandler);
				resizeHandler(null);				
			}
					
			protected function resizeHandler(event:ResizeEvent):void {				
				data.width = measuredWidth;
				data.height = measuredHeight;
			}
			
			override protected function drawBorder(unscaledWidth:Number, unscaledHeight:Number):void {				
			}
			
			override protected function drawBackground(unscaledWidth:Number, unscaledHeight:Number):void {				
			}
			
		]]>
	</fx:Script>
	
</s:IconItemRenderer>