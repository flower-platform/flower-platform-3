##########################################################
# General
##########################################################

# {0} - the application version
product.title-with-version = Flower Dev Center - {0}

form.ok = OK
form.cancel = Cancel
form.yes = Yes
form.no = No
form.save = Save
form.info = Info
form.goto = Go To

# {0} - the entity name, e.g. "Organization"
form.add = Add {0}

# {0} - the entity name, e.g. "Organization"
form.edit = Edit {0}

list.refresh = Refresh
list.add = Add
list.edit = Edit
list.delete = Delete
list.delete.confirmation = Are you sure that you want \nto delete selected item(s)?
list.select.all = Select All
list.deselect.all = Deselect All

##########################################################
# Explorer
##########################################################
explorer.workingDirectories = Working Directories
explorer.fileSystem = File System

explorer.markAsWorkingDirectory.action = Mark as Working Directory
explorer.markAsWorkingDirectory.error.title = Could Not Mark as Working Directory 
explorer.markAsWorkingDirectory.error.isInProj = The selected directory "{0}" is a child of project "{1}". Nesting is not supported.
explorer.markAsWorkingDirectory.error.isInWD = The selected directory "{0}" is a child of working directory "{1}". Nesting is not supported.
explorer.createOrImportProject.action = Create/Import Project
explorer.createOrImportProject.error.title = Could Not Create/Import Project
explorer.createOrImportProject.error.cannotFindWD = The selected directory "{0}" is not in a Working Directory (directly or indirectly). Please mark one of the its parent directories as Working Directory.

##########################################################
# Entities and fields
##########################################################

##########################################################
# Organization related
##########################################################

# common labels
entity.organization = Organization
entity.organization._table = Organizations
entity.organization.request.title = Request Creation of a New Organization
entity.organization.request.submit = Submit Request
entity.organization.approve = Approve New Organization Request
entity.organization.deny = Deny New Organization Request
entity.organization.approveDeny.wizard.description = You can add a comment that will be sent by email to the organization owner.
entity.organization.approveDeny.wizard.commentForOrganizationOwner = Comment for \nOrganization Owner

# Parameters: {0} - organizations list
entity.organization.approve.confirmation = Are you sure you want to approve the following organizations: {0}?
entity.organization.deny.confirmation = Are you sure you want to deny the following organizations: {0}?

entity.organization.filter.allOrganizations = Show All My Organizations
entity.organization.filter.allOrganizations.label = All My Organizations
entity.organization.filter.noOrganization = Show All (No Organization Filter)
entity.organization.filter.noOrganization.label = All (No Organization Filter)
entity.organization.filter.multipleOrganizations.label = Multiple Organizations

# field labels
entity.organization.name = Name
entity.organization.label = Label
entity.organization.url = URL
entity.organization.logoUrl = Logo URL
entity.organization.iconUrl = Icon URL
entity.organization.status = Status
entity.organization.activated = Activated
entity.organization.groups = Groups
entity.organization.commentForAdmin = Comment for\nAdministrator
entity.organization.commentForAdmin.title = Comment for Administrator

# hints
entity.organization.form.hint = You are about to request the creation of a new organization. The administrator will review your request before approving it.\n\n\
Please make sure that all the fields are correctly filled (cf. instructions indicated next to each field) before submitting the request. 

entity.organization.name.hint = The name (or id) of the organization is usually the name of the associated open-source project. E.g. "my-open-source-project".\n\n\
Characters allowed: lower case characters, digits, dashes, underscores.

entity.organization.label.hint = E.g. My Open Source Project. This label will be used almost everywhere within Flower Dev Center, as it doesn't have character restrictions (e.g. can contain spaces, etc).

entity.organization.url.hint = The public URL of your open-source project, e.g. http://www.my-open-source-project.org.\n\n This link is used in several \
places within Flower Dev Center: hyperlink of the organization logo (within the login dialog), hyperlink within the About dialog (accessible through About \
menu entry or by clicking on the organization label, at the right of the global application menu bar).

# {0} - max width
# {1} - max height
entity.organization.logoUrl.hint = Recommended max. {0} x {1}px (above this resolution, the image will be downscaled). E.g. http://www.my-open-source-project.org/my-logo.png. This image is displayed on the login dialog and on the About dialog (accessible through About \
menu entry or by clicking on the organization label, at the right of the global application menu bar).\n\n\
If empty, only the label of the organization will be used, with a bigger font.

entity.organization.iconUrl.hint = Exactly 16 x 16px please. Used in several places within the application, next to the organization label.\n\n\
If empty, a default icon will be used.

entity.organization.activated.hint = This cannot be changed here. Use the "Approve" or "Deny" actions, within the Organizations screen.
entity.organization.commentForAdmin.hint = You can add additional info for the administrator, related to your request/project.  

entity.organization.confirmation = Are you sure you want to request this organization?

# help
entity.organization.help.whatis.title = What's an organization?
entity.organization.help.whatis.content =\
Let's work on an example. An <b>organization</b> can be an open-source project, e.g. "my-open-source-project". <br/><br/>\
 \
<b>Files</b>\
<ul>\
	<li>There is a <b>top level directory</b> within the Project Explorer, named "my-open-source-project"</li>\
	<li>This top level directory contains one or several <b>workspaces</b> (which are plain directories in fact). Each workspace contains \
	one or several <b>projects</b>. E.g. you might have the following projects: <ul>\
		<li>/my-open-source-project/workspace_trunk/myProj.mainProject</li>\
		<li>/my-open-source-project/workspace_trunk/myProj.lib</li>\
		<li>/my-open-source-project/workspace_branch_2.0.0/myProj.mainProject</li>\
	</ul></li>\
</ul><br/>\
 \
<b>Users, Groups and Permissions</b><br/>\
An organization has <b>groups</b> and it has <b>users</b> that are part of the organization. <b>Permissions</b> can be \
configured (i.e. given or denied) per organization, per group or per user. Permissions control access to resources (e.g. write permission for a certain file) \
and access to other operations. <br/><br/>\
 \
<b>Plugins and Scripts</b><br/>\
Within the Flower Dev Center server, on organization defines security boundaries. I.e. code that is executed by \
an user that belongs to one or several organizations, cannot access data outside the security sandbox of his/her organization(s). <br/><br/> \
Flower Dev Center will allow organizations to load dynamically custom <b>plugins</b> or <b>scripts</b>, that execute within the \
security sandbox of the organization, controlled by the permissions that are set.

entity.organization.help.afterActivation.title = Getting Started with Flower Dev Center

entity.organization.help.afterActivation.contentWithoutOrganizationFilter =\
Thank you for creating an account on Flower Dev Center server!\n\n\
Please join an existing organization, or create a new organization, in order to get started with Flower Dev Center.

# {0} - organization label
entity.organization.help.afterActivation.contentWithOrganizationFilter = Thank you for creating an account on Flower Dev Center server!\n\n\
A request to become a member of organization {0} has been automatically made.

entity.organization.help.afterActivation.findOutMore = Would you like to find out more about the meaning of an organization in Flower Dev Center (e.g. if this is the first time you \
use Flower Dev Center)?

##########################################################
# Group related
##########################################################

# common labels

entity.group._table = Groups

# hints

entity.groups.name.hint = The name of the group. It is automatically prefixed with the name of the organization where it belongs (e.g. myOrg.myGroup).
entity.groups.organization.hint = The organization where this groups belongs.

# field labels

entity.group = Group
entity.group.name = Name
entity.group.organization = Organization

# Parameters: {0} - list of groups
entity.group.userWasAddedToGroups = The user was added to the following groups: <ul>{0}</ul>
entity.group.userWasNotAddedToGroups = The user could not be added to groups: <ul>{0}</ul> because they don't exist.
entity.group.userWasRemovedFromGroups = The user was removed from the following groups:<ul>{0}</ul>
entity.group.youWereRemovedFromGroups = You were removed from groups:<ul>{0}</ul>
entity.group.manuallyAddUserToGroups = <br/>You may need to manually add the new user to groups, according to your group/permissions configuration.

##########################################################
# User related
##########################################################

# common labels

entity.user._table = Users
entity.user.userInformation = User Information
entity.user.form.passwordAgain = Password Again
entity.user.form.emailAgain = Email Again
entity.user.form.groups.belongsTo = User belongs to
entity.user.form.groups.available = Available groups
entity.user.form.deleteAccount = Delete Account
entity.user.form.deleteAccount.confirmation = Are you sure you want to delete your account?

# hints

entity.user.anonymous.hint = The anonymous user is a special user used when no login is required. To deactivate the anonymous user, change its password. To reactivate it, assign it the same password as its login.

entity.user.login.hint = Used to login into Flower Dev Center. Read-only.\n\n\
Characters allowed: lower case characters, upper case characters, digits, dashes, underscores, periods.
entity.user.email.hint = The email where the user will receive notifications from Flower Dev Center.
entity.user.name.hint = The user's name.
entity.user.activated.hint = Checked if the user has activated his account using his activation code. Read-only.
entity.user.password.hint = The user's password.
entity.user.passwordAgain.hint = Repeat the password.
entity.user.groups.hint = Drag and drop the groups from one list to another to add to or remove the user from the available groups.

entity.user.login.validation = Characters allowed: lower case characters, upper case characters, digits, dashes, underscores, periods.

# User Form - organizations tab

entity.user.organizations.requestNew = Create New Organization
entity.user.organizations.requestMembership = Join Existing Organization
entity.user.organizations.leave = Leave Organization
entity.user.organizations.leave.confirmation = Are you sure you want to leave the selected organizations?

entity.user.organizations.requestMembership.hint = Select one or more organizations (with CTRL + click) where you would like to become a member.
entity.user.organizations.requestMembership.confirmation.hint = You are about to request membership to the selected organization(s). \
The organization administrator(s) will be notified by email about your request. They will review and process your request.
entity.user.organizations.requestMembership.commentForAdministrator.hint = This comment will be included in the email sent to the organization administrator(s). If you think that it's necessary, add some info in this field.
entity.user.organizations.requestMembership.confirmation = Are you sure you want to request membership to the following organizations: {0}?

# Users Screen

entity.user.addToOrganization = Add to Organization
entity.user.removeFromOrganization = Remove from Organization
entity.user.wizard.addToOrganization.description = Select the organization where the user will be added as member.
entity.user.wizard.removeFromOrganization.description = Select the organization where the user will be removed.

# Parameters: {0} - organization label
entity.user.wizard.addToOrganization.confirmation = Are you sure you want to add this user as a member of {0}?
entity.user.wizard.removeFromOrganization.confirmation = Are you sure you want to remove this user from {0}?

entity.user.approveMembership = Approve Membership Request
entity.user.denyMembership = Deny Membership Request
entity.user.wizard.approveMembership.description = Select the organization where the user will be approved as member.
entity.user.wizard.denyMembership.description = Select the organization where the user will be denied as member.

# Parameters: {0} - organization label
entity.user.wizard.approveMembership.confirmation = Are you sure you want to approve this user as a member of {0}?
entity.user.wizard.denyMembership.confirmation = Are you sure you want to deny this user as a member of {0}?

entity.user.upgrade = Upgrade to Organization Admin
entity.user.downgrade = Downgrade to Normal Member
entity.user.wizard.upgrade.description = Select the organization where the user will be upgraded as administrator.
entity.user.wizard.downgrade.description = Select the organization where the user will be downgraded as member.

# Parameters: {0} - organization label
entity.user.wizard.upgrade.confirmation = Are you sure you want to upgrade this user as administrator of {0}?
entity.user.wizard.downgrade.confirmation = Are you sure you want to downgrade this user as member of {0}?

entity.user.wizard.notifyUser = Notify User
entity.user.wizard.commentForUser.title = Comment for User
entity.user.wizard.commentForUser.description =  You can add a comment that will be sent by email to the user.
entity.user.commentForUser.label = Comment\nfor User


entity.user.organizations.confirmation.error = Please select a valid organization.
entity.user.addToOrganization.alreadyInAllOrganizations = This user already belongs to all your available organizations.

# New User Wizard

entity.user.wizard.createNewUser = Create a New User
entity.user.wizard.selectOrganization = Select the organization where the user will be created.
entity.user.wizard.enterUserInformation = Enter the user information.

# field labels

entity.user = User
entity.user.login = Login
entity.user.name = Name
entity.user.password = Password
entity.user.email = Email
entity.user.activated = Activated
entity.user.groups = Groups
entity.user.organizations = Organizations
entity.user.myOrganizations = My Organizations
entity.user.usersOrganizations = User's Organizations

##########################################################
# Permissions related
##########################################################

# common labels

entity.permission._table = Permissions

# {0} - resource
entity.permission.confirmation.addSimilarPermission = Would you like to add the similar permission for {0}?
entity.permission.confirmation.editSimilarPermission = Would you like to edit the similar permission for {0}?
entity.permission.confirmation.deleteSimilarPermission = Would you like to delete the similar permission for {0}?

# File Permission

entity.permission.simpleName.flowerWebFilePermission = File
entity.permission.filePermission.type.hint = A <b>File</b> permission controls access to a file, directory and/or directory children. Examples: <br/><br/>\
<ul><li><b>root/myOrg/ws_trunk/readme.txt; read-write-delete; @myOrg.users</b> - allows full access to "readme.txt", for all users from group @myOrg.users</li>\
<li><b>root/myOrg/ws_trunk/*; read-write; @ALL</b> - allows read/write (no delete) access to all children of "ws_trunk", for everyone</li></ul>\
<li><b>root/myOrg/ws_trunk/install.txt; none; $john</b> - forbids john access to "install.txt" file</li></ul><br/>\
<b>HINT:</b> After setting file permissions, use the filter from <i>Permissions</i> screen to verify the permissions for a given resource (i.e. including\
the inherited permissions).

entity.permission.filePermission.resource.hint = The path for which the permission is applicable.<br/><br/><b>Examples:</b><br/>root/myOrg/ws_trunk/readme.txt<br/>root/myOrg/ws_trunk/directory<br/>root/myOrg/ws_trunk/directory/*<br/><br/>\
<b>NOTE:</b> for a directory, you generally need to add 2 entries: one for the directory itself and one for its children (i.e. with *). Flower Dev Center will propose this to you.

# {0} - available file actions
entity.permission.filePermission.actions.hint = <b>Available values:</b><br/><b>read</b> - allows only read access<br/><b>read-write</b> - allows read and write access</b><br/>\
<b>read-write-delete</b> - allows full access<br/><b>none</b> - forbids access

# Modify Permissions Permission hints
entity.permission.simpleName.modifyTreePermissionsPermission = Modify Tree Permissions
entity.permission.modifyPermissionsPermission.type.hint =  This permission controls if (and how) users can alter (i.e. add, modify, delete) permissions that are configured\
per tree resources (e.g. File permissions, even this kind of permission, which is a tree permission). Examples: <br/><br/>\
<ul><li><b>root/myOrg/ws_trunk/*; #myOrg; @myOrg.admin</b> - allows users from group @myOrg.admin to alter permissions for resources under "ws_trunk", but only for users from organization #myOrg</li>\
<li><b>root/myOrg/ws_trunk/johns_directory/*; @myOrg.johns_friends; $john</b> - allows $john to alter permissions for resources under "johns_directory", but only for users from @myOrg.johns_friends</li></ul><br/>\
<b>HINT:</b> Using this kind of permissions, you can define "sub-administrators", i.e. users that can alter permissions only on a certain area of the organization. \
After setting the permissions, use the filter from <i>Permissions</i> screen to verify the permissions for a given resource (i.e. including\
the inherited permissions).

entity.permission.modifyPermissionsPermission.resource.hint = The user can alter permissions that are configured for this path.<br/><br/><b>Examples:</b><br/>root/myOrg/ws_trunk/readme.txt<br/>root/myOrg/ws_trunk/directory<br/>root/myOrg/ws_trunk/directory/*<br/><br/>\
<b>NOTE:</b> for a directory, you generally need to add 2 entries: one for the directory itself and one for its children (i.e. with *). Flower Dev Center will propose this to you.

entity.permission.modifyPermissionsPermission.actions.hint = The user can alter permission that belong to these entities.<br/><br/><b>Examples:</b><br/><b>$john</b> - user<br/><b>@myOrg.myGroup</b> - group<br/>\
<b>#myOrg</b> - organization<br/><b>*</b> - everyone; modifiable only by Flower Dev Center admin

# Security Entities Administration Permission hints

entity.permission.simpleName.adminSecurityEntitiesPermission = Administer Entities
entity.permission.adminSecurityEntitiesPermission.type.hint = This permission allows adding, editing or deleting entities (organizations, groups and users). Examples:<br/><br/>\
<ul><li><b>#myOrg</b> assigned to <b>@myOrg.admin</b> - allows users from group @myOrg.admin to add, edit, delete entities that belong to organization #myOrg</li>\
<li><b>@myOrg.johns_friends</b> assigned to <b>$john</b> - allows $john to add, edit, delete entities that belong to group @myOrg.johns_friends</li></ul>
entity.permission.adminSecurityEntitiesPermission.resource.hint = Not used.
entity.permission.adminSecurityEntitiesPermission.actions.hint = List (separated with ,) of entities to which the modified security entity can belong.<br/><br/><b>Examples:</b><br/><b>@myOrg.myGroup</b> - group<br/>\
<b>#myOrg</b> - organization<br/><b>*</b> - everyone; modifiable only by Flower Dev Center admin

entity.permission.assignedTo.hint = On which entity (user, group, organization) should the permission be applicable.<br/><br/><b>Examples:</b><br/><b>$john</b> - user<br/><b>@myOrg.myGroup</b> - group<br/>\
<b>#myOrg</b> - organization<br/><b>@ALL</b> - special group: everyone; modifiable only by Flower Dev Center admin

# field labels

entity.permission = Permission
entity.permission.type = Type
entity.permission.resource = Resource
entity.permission.actions = Actions
entity.permission.assignedTo = Assigned To

# validation

entity.permission.validation.mustBeEmpty = Must be empty.
entity.permission.validation.invalidPath = Path should exist on the file system and should be relative to workspace.

# {0} - available actions
entity.permission.validation.invalidAction = Invalid action value. Possible values are: {0}.

# {0} - list of entities
entity.permission.validation.invalidPrefix = The following entities have no prefix or an incorrect prefix: {0}.
entity.permission.validation.organizationsNotFound = The following organizations do not exist: {0}.
entity.permission.validation.groupsNotFound = The following groups do not exist: {0}.
entity.permission.validation.usersNotFound = The following users do not exist: {0}.

##########################################################
# Filter labels
##########################################################

entity.filter = Filter
entity.filter.apply = Apply Filter
entity.filter.clear = Clear Filter
# {0} - the current filter
entity.filter.current = Current Filter: {0}
entity.filter.none = none

entity.filter.usersFilter.simple=\
<font color='#076baa' size='+4'><b>Simple examples:</b></font>\
<ul>\
	<li><b>pending</b> - all users pending membership approval</li>\
	<li><b>#myOrg</b> - all users from <b>organization</b> "myOrg" OR "abc_myOrg_abc"</li>\
	<li><b>@myOrg.admin</b> - all users from <b>group</b> "myOrg.admin" OR "myOrg.admin_abc"</li>\
	<li><b>$david</b> - all <b>users</b> that contain "david" (in name, login, email)</li>\
</ul>

# {0} - the rendered value of "entity.filter.usersFilter.simple", {1} - the rendered value of "entity.filter.usersFilter.advanced.title"
entity.filter.usersFilter.tooltip = {0} <br/> <font color='#076baa'>The filter has other features. Click on "{1}", on the right, for additional info ---></font>

entity.filter.usersFilter.advanced.title = Advanced filtering

# {0} - the rendered value of "entity.filter.usersFilter.simple" 
entity.filter.usersFilter.advanced.content = {0} <br/>\
<font color='#076baa' size='+4'><b>More complex examples:</b></font>\
<ul>\
	<li><b>#myOrg $*a*</b> or <b>#myOrg || $*a*</b> or <b>#myOrg, $*a*</b> - all users that belong to the organization "myOrg" <b>or</b> where the name, login or email contains the letter "a"</li>\
	<li><b>@myOrg.user && $*a*</b> - all users that belong to the group "myOrg.user" <b>and</b> where the name, login or email contains the letter "a"</li>\
	<li><b>$*a* PENDING</b> - all users where the name, login or email contain the letter "a" <b>or</b> have requested membership in an organization</li>\
	<li><b>$*a* #myOrg* && PENDING</b> - all users where the name, login or email contain the letter "a" <b>or</b> belong to an organization whose name or label starts with "myOrg" <b>and</b> have requested membership in an organization</li>\
</ul><br/>\
<font color='#076baa' size='+4'><b>Specification:</b></font>\
<ul>\
	<li><b>$</b> filter by <b>user</b> name, login or email</li>\
	<li><b>@</b> filter by the <b>groups</b> where the user belongs</li>\
	<li><b>#</b> filter by the <b>organizations</b> where the user belongs</li>\
	<li><b>MEMBER, ADMIN, PENDING</b> filter by the <b>status</b> of the user in the organizations (lower case or mix case work as well)</li>\
	<li><b>||</b> or space or <b>,</b> logical OR</li>\
	<li><b>&&</b> logical AND</li>\
</ul>\
Wildcards can be used; for example <b>*abc*</b> will match a string that contains the sequence "abc".\

entity.filter.permissionsFilter = Double click on tree to filter by resource

##########################################################
# Sort labels
##########################################################

entity.sort = Default Sort
entity.sort.groups.tooltip = Sort the groups by organization name and group name
entity.sort.permissions.tooltip = Sort the permissions by type and resource

##########################################################
# Authentication popup and menubar labels
##########################################################

authentication.myAccount = My Account
authentication.login = Login
authentication.switch = Switch User
authentication.logout = Logout
authentication.notConnected = Not Connected
authentication.keepLayoutAfterSwitch = Keep workspace layout after user switch

# {0} - login
authentication.loginAs = Login as {0}
authentication.switchAs = Switch as {0}

authentication.register = Register
authentication.register.complete.title = Registration Complete. Please Activate
# {0} - user email
authentication.register.complete.content =\
Thank you for registering! We have sent you an activation email, at {0}.\n\n\
Please check your mail box and follow the provided link (or code) in order to complete the registration process.
authentication.register.error.title = Registration Error
authentication.register.loginAlreadyExists = There is already an user with this login. Please chose a new login and try again.
authentication.register.emailNotValid = The email address is not valid!
authentication.register.emailNotUnique = There is already a user with this email!
# {0} minimum length for user password
authentication.register.passwordTooShort = Password must be at least {0} characters long!

authentication.iForgot = I Forgot...
authentication.iForgot.button = Send Email with Info
authentication.iForgot.myLogin = my login
authentication.iForgot.myPassword = my password
authentication.iForgot.loginRecovery.title = Login Recovery
authentication.iForgot.loginRecovery.content = Your login and password were sent to your mail box.
authentication.iForgot.passwordRecovery.title = Password Recovery
authentication.iForgot.passwordRecovery.content = Your new password was sent to your mail box.
authentication.iForgot.loginDoesNotExist = There are no users with this login.
authentication.iForgot.emailDoesNotExist = There are no users with this email.

authentication.activationCode = Activation Code
authentication.resendActivationCode = Resend Activation Code
authentication.debug = Debug
authentication.debug.connectUsing = Connect Using
authentication.debug.log = BlazeDS Log

# error messages

authentication.error.doNotMatch.passwords = Passwords do not match.
authentication.error.doNotMatch.emails = Emails do not match.
authentication.error.noActivationCode = You have not provided an activation code, or the provided activation code was incorrect!
authentication.error.wrongLoginOrPassword = Incorrect login or password! \nPlease try again.

##########################################################
# About popup labels
##########################################################
about.title = About
about.aboutFlower = About Flower Dev Center
# {0} - organization label
about.aboutOrganization = About {0}
about.licensesForIcons = Licenses for Icons

about.powered-by-flex = Client / Frontend powered by Apache Flex (TM)
about.powered-by-java = Server / Backend powered by Java (TM)

##########################################################
# Mail templates
##########################################################

# Used to add a comment to/from admin to the mail templates below
# {0} - the comment
mail.template.withAdminComment = <p>The administrator left you the following comment:<br/>"{0}".</p>
mail.template.withUserComment = <p>The user has added the following comment:<br/>"{0}".</p>
mail.template.withYourComment = <p>You added the following comment:<br/>"{0}".</p>

# Sent after a new user registers
mail.template.send-activation-code.subject = [Flower Dev Center] Please activate your account
# {0} - user login, {1} - user name, {2} - user email, {3} - server address, {4} - activation link, {5} - activation code
mail.template.send-activation-code.body = \
<p>Hello {1} ({0}),</p>\
<p>Thank you for registering a new Flower Dev Center account. <a href="{4}">Please activate your account by following this link</a>. \
You can also use the following activation code: <b>{5}</b>, that you can input in the the login form, when asked.</p>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent after the user activates his account
mail.template.user-activated.subject = [Flower Dev Center] Account activated
# {0} - user login, {1} - user name, {2} - user email, {3} - server address, {4} - welcome message, {5} - information about organizations
mail.template.user-activated.body = \
<p>Hello {1} ({0}),</p>\
<p>{4}</p><p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<h3>What''s an organization in Flower Dev Center?</h3><p>{5}</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to user after the user has requested membership to an organization
# {0} - organization label
mail.template.membership-requested.to-user.subject = [Flower Dev Center] Membership requested to organization: {0}
# {0} - user login, {1} - user name, {2} - user email, {3} - server address customized for organization, {4} - organization label, {5} - comment for admin
mail.template.membership-requested.to-user.body = \
<p>Hello {1} ({0}),</p>\
<p>You have requested to become a member of organization: {4}. {5} </p>\
<p>An email has been sent to the organization administrator(s). They will review and process your request.</p>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to organization admin after a user has requested membership to his organization
# {0} - organization label
mail.template.membership-requested.to-org-admin.subject = [Flower Dev Center] An user has requested membership to organization: {0}
# {0} - org admin login, {1} - org admin name, {2} - org admin email, {3} - server address customized for organization, {4} - organization label, {5} - comment for admin, {6} - user login, {7} - user name, {8} - user email
mail.template.membership-requested.to-org-admin.body = \
<p>Hello {1} ({0}),</p>\
<p>The following user has requested to become a member of the organization that you are administering: {4}:</p>\
<ul><li>Login: {6}</li><li>Name: {7}</li><li>Email: {8}</li></ul>{5}\
<p>Please login to Flower Dev Center and <b>accept</b> or <b>deny</b> the user''s membership (top/right of the screen, click on your name -> My Account -> My Organizations).</p>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent after user was accepted as member of an organization
# {0} - organization label
mail.template.membership.accepted.subject = [Flower Dev Center] Membership accepted to organization: {0}
# {0} - user login, {1} - user name, {2} - user email, {3} - server address customized for organization, {4} - organization label, {5} - comment from admin
mail.template.membership.accepted.body = \
<p>Hello {1} ({0}),</p>\
<p>You are now a member of organization: {4}.</p>{5}\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent after user was denied as member of an organization
# {0} - organization label
mail.template.membership.denied.subject = [Flower Dev Center] Membership denied to organization: {0}
# {0} - user login, {1} - user name, {2} - user email, {3} - server address customized for organization, {4} - organization label, {5} - comment from admin
mail.template.membership.denied.body = \
<p>Hello {1} ({0}),</p>\
<p>Your membership was denied to organization: {4}.</p>{5}\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to user after he has left an organization
# {0} - organization label
mail.template.leave-organization.to-user.subject = [Flower Dev Center] Membership ended to organization: {0}
# {0} - user login, {1} - user name, {2} - user email, {3} - server address customized for organization, {4} - organization label, {5} - comment from admin
mail.template.leave-organization.to-user.body = \
<p>Hello {1} ({0}),</p>\
<p>You are no longer a member of organization: {4}.</p>\
{5}\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to organization admin after a user has left the organization
# {0} - organization label
mail.template.leave-organization.to-admin.subject = [Flower Dev Center] An user has left organization: {0}
# {0} - org admin login, {1} - org admin name, {2} - org admin email, {3} - server address customized for organization, {4} - organization label, {5} user who left the organization/login, {6} - name, {7} - email
mail.template.leave-organization.to-admin.body = \
<p>Hello {1} ({0}),</p>\
<p>The following user has left the organization that you are administering: {4}.</p>\
<ul><li>Login: {5}</li><li>Name: {6}</li><li>Email: {7}</li></ul>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to user after requesting to create an organization
# {0} - organization label
mail.template.organization-created.to-user.subject = [Flower Dev Center] Request for new organization: {0}
# {0} - user login, {1} - user name, {2} - user email, {3} - server address customized for organization, {4} - organization label, {5} - comment for admin
mail.template.organization-created.to-user.body = \
<p>Hello {1} ({0}),</p>\
<p>You have requested the creation of organization: {4}. An email has been sent to the Flower Dev Center administrator(s). They will review and process your request.</p>\
{5}\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to FDC admins after a user has requested to create an organization
# {0} - organization label
mail.template.organization-created.to-fdc-admin.subject = [Flower Dev Center] Request for new organization: {0} pending approval
# {0} - admin login, {1} - admin name, {2} - user email, {3} - server address customized for organization, {4} - user who created the organization, {5} - organization label, {6} - comment for admin
mail.template.organization-created.to-fdc-admin.body = \
<p>Hello {1} ({0}),</p>\
<p>User {4} has requested the creation of organization: {5}.</p>\
{6}\
<p>Please login to Flower Dev Center and <b>approve</b> or <b>deny</b> the organization (Administration menu -> Organizations).</p>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to user after a FDC admin has approved his organization
# {0} - organization label
mail.template.organization-approved.subject = [Flower Dev Center] Organization: {0} approved
# {0} - user login, {1} - user name, {2} - user email, {3} - server address customized for organization, {4} - organization label, {5} - information about operations executed on organization approved (see below), {6} - comment from admin
mail.template.organization-approved.body = \
<p>Hello {1} ({0}),</p>\
<p>Your organization: {4} has been approved.</p>{6}\
<h3>Operations Executed</h3>\<p>{5}</p>\
<h3>Remarks Regarding Permissions</h3>\
<p>You will possibly have to manually add or edit groups and permissions, otherwise the organization members will only have read access by default.</p>\
<p>The anonymous user that was automatically created will allow anyone to view your organization; to deactivate the anonymous user, change its password. To reactivate it, assign it the same password as its login.</p>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Specific information to be sent on organization approved. 
# {0} - created directories, {1} - created groups, {2} - created users, {3} - organization admin, {4} - admin groups, {5} - permissions
mail.template.organization-approved.operations-executed = \
The following operations were executed:<br/>\
<ul>\
	<li>new directories created: {0}</li>\
	<li>new groups created: {1}</li>\
	<li>new users created: {2}</li>\
	<li>organization owner {3} was added to groups: {4}</li>\
	<li>new permissions created: {5}</li>\
</ul> 

# Sent to user after a FDC admin has denied his organization
# {0} - organization label
mail.template.organization-denied.subject = [Flower Dev Center] Organization: {0} denied
# {0} - user login, {1} - user name, {2} - user email, {3} - server address customized for organization, {4} - organization label, {5} - comment from admin
mail.template.organization-denied.body = \
<p>Hello {1} ({0}),</p>\
<p>Your organization: {4} has been denied.</p>{5}\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

# Sent to user to recover his password
mail.template.recover.password.subject = [Flower Dev Center] Password Recovery
# {0} - user login, {1} - user name, {2} - user email, {3} - server address, {4} - new password
mail.template.recover.password.body = \
<p>Hello {1} ({0}),</p>\
<p>You accessed "I forgot my password", so we have regenerated your password. The new password is: {4}.</p>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>


# Sent to user to recover his username and password
mail.template.recover.username.subject = [Flower Dev Center] Login and Password Recovery
# {0} - user login, {1} - user name, {2} - user email, {3} - server address, {4} - new password
mail.template.recover.username.body = \
<p>Hello {1} ({0}),</p>\
<p>You accessed "I forgot my login". Your login is {0}, and we have regenerated your password. The new password is: {4}.</p>\
<p>You can <b>access Flower Dev Center</b> with this link: <a href="{3}">{3}</a>.</p>\
<p>Kind regards,<br>The Flower Platform Team</p>

##########################################################
# Validation Messages / Diagnostics related
##########################################################
validation.messages.dialog.title = Validation Messages
validation.messages.action.label = Show Validation Messages
validation.messages.action.sortindex = 95
validation.messages.none.for.selection = There are no validation warnings for the selected element(s).
validation.messages.warn.after.synchronization = \
New validation messages were generated after the last synchronization.\n\
Would you like to view them? 

##########################################################
# Synchronization
##########################################################
sync.action.full.label = Synchronize Full (Ignore Time Stamps)
sync.action.label = Synchronize
sync.error.title = Synchronization Error
sync.error.elementsDontBelongInSrcDir = The selected elements do not belong in any source directory!
sync.error.elementsDontBelongInSameModelFile = The selected elements do not belong to the same model file. Please select one or more elements from the same model file and try again.
sync.error.elementsDontBelongToSrcDir = None of the selected elements belongs to a source directory!
sync.error.modelNotInProject = The model file must be placed inside a project directory!
sync.error.solveConflicts = There are conflicts in {0}. Please solve the problem and try again.
sync.error.solveErrors = There are errors in {0}. Please solve the problem and try again.
sync.error.wrongSrcDirFormat = Wrong format for {0}!
sync.error.srcDirNotFound = Synchronization was not performed because {0} was not found on the file system!
sync.error.gettingSrcDir = Error while getting the source directory for {0}!

svn.ui.checkout.workingDirectorySelection.title = Working directory
