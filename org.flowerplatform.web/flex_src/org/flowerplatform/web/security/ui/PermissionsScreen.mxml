<?xml version="1.0" encoding="utf-8"?>
<!--
 Permission administration panel.
 
 @author Cristi
 @author Cristina

 @flowerModelElementId _mI2gkFcPEeGL3vi-zPhopA
-->
<mx:VBox
	implements="org.flowerplatform.flexutil.popup.IPopupContent" 
	xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:popup="com.crispico.flower.util.popup.*" 
	xmlns:navigator="com.crispico.flower.mp.web.navigator.*"
	xmlns:ui="org.flowerplatform.web.security.ui.*" 
	xmlns:tree="com.crispico.flower.mp.web.tree.*"
	xmlns:utils="org.flowerplatform.web.utils.*"
	xmlns:common="com.crispico.flower.flexdiagram.util.common.*"
	paddingBottom="10" paddingLeft="10" paddingRight="10" paddingTop="10"
	creationComplete="onCreationComplete()" 
	minWidth="900" minHeight="500" 
	currentState="default"
	>
	
	<mx:Script>
		<![CDATA[
			import mx.collections.IList;
			
			import org.flowerplatform.flexutil.popup.IAction;
			import org.flowerplatform.flexutil.popup.IPopupContent;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.web.WebPlugin;
			import org.flowerplatform.web.common.WebCommonPlugin;
			import org.flowerplatform.web.common.security.dto.PermissionsByResourceFilter;
			
			/**
			 * @flowerModelElementId _RBwYMV34EeGwLIVyv_iqEg
			 */
			private static const CURRENT_FILTER_LABEL:String = WebPlugin.getInstance().getMessage("entity.filter.current");
			
			public function getActions(selection:IList):Vector.<IAction> {
				return null;
			}
			
			public function getSelection():IList {
				return null;
			}
			
			public function set popupHost(value:IPopupHost):void {
				value.setLabel("Permissions Screen");
			}
			
			/**
			 * Fills the resource tree and permission panel with data.
			 * 
			 * <p>
			 * A "filterChangedEvent" listener is added to <code>permissionPanel</code> to
			 * update data on table each time the <code>permissionPanel.currentFilter</code> changes.
			 * 
			 * @see filterChangedHandler()
			 * @flowerModelElementId _RBy0cF34EeGwLIVyv_iqEg
			 */ 			
			private function onCreationComplete():void {				
				permissionsPanel.refreshBtnHandler();
				permissionsPanel.addEventListener("filterChangedEvent", filterChangedHandler);
				
//				resourceTree.statefulClient = new GenericTreeStatefulClient();
//				resourceTree.statefulClient.genericTree = resourceTree;
//				CommunicationPlugin.getInstance().statefulClientRegistry.register(resourceTree.statefulClient, null);
				
				// this is only to show the root node; the path won't be computed correctly, so the PermissionsByFilterResource still needs to add the root prefix
//				TreeNode(resourceTree.dataProvider[0]).label = ProjectExplorerTreeNew.workspaceRootName;
//				TreeNode(resourceTree.dataProvider[0]).iconUrls = new ArrayCollection([WebCommonPlugin.getInstance().getResourceUrl("images/folder.gif")]);
			}		
			
			/**
			 * When a double click is detected on <code>resourceTree</code>,
			 * filters data in <code>permissionPanel</code> table based on
			 * selected resource path.
			 * @flowerModelElementId _RBy0c134EeGwLIVyv_iqEg
			 */ 
			private function doubleClickHandler(event:MouseEvent):void {
//				var node:TreeNode = TreeNode(resourceTree.selectedItem);				
//				// puts filter on panel				
//				permissionsPanel.currentFilter = new PermissionsByResourceFilter(node.getPath());
			}
			
			/**
			 * Each time the <code>permissionPanel</code> current filter changes,
			 * updates the filter label and refreshes the <code>permissionPanel</code> table data.
			 * @flowerModelElementId _RBzbg134EeGwLIVyv_iqEg
			 */ 			
			private function filterChangedHandler(event:Event):void {
				if (permissionsPanel.currentFilter != null) {
					filter.text = CURRENT_FILTER_LABEL + PermissionsByResourceFilter(permissionsPanel.currentFilter).resource;
				} else {
					filter.text = CURRENT_FILTER_LABEL + WebPlugin.getInstance().getMessage("entity.filter.none");
				}
				permissionsPanel.refreshBtnHandler();
				clearBtn.enabled = true;
			}
			
			/**
			 * Removes the current filter from <code>permissionPanel</code> table.
			 * @flowerModelElementId _RB0CkV34EeGwLIVyv_iqEg
			 */ 
			private function clearBtnHandler(event:MouseEvent):void {
				permissionsPanel.currentFilter = null;
				clearBtn.enabled = false;
			}
			
			public function closeForm():void {	
//				CommunicationPlugin.getInstance().statefulClientRegistry.unregister(resourceTree.statefulClient, null);
//				super.closeForm();
			}
			
		]]>
	</mx:Script>
	
	<mx:states>
		<mx:State name="default">
			<mx:AddChild relativeTo="{permissionsPanel.menuBarFirstHBox}" position="after">
				<mx:HBox width="100%" horizontalAlign="left" verticalAlign="middle">
					<mx:Label id="filter" width="100%" text="{CURRENT_FILTER_LABEL + 'none'}" fontWeight="bold"/>	
					<common:FlowerLinkButton id="clearBtn" label="{WebPlugin.getInstance().getMessage('entity.filter.clear')}" iconURL='{WebCommonPlugin.getInstance().getResourceUrl("images/filter/filter_delete.png")}' click="clearBtnHandler(event)" enabled="false"/>
					<utils:HintButton toolTip="{WebPlugin.getInstance().getMessage('entity.filter.permissionsFilter')}"/>
				</mx:HBox>
			</mx:AddChild>
		</mx:State>
	</mx:states>
	
	<mx:HDividedBox width="100%" height="100%">		
		<!--tree:ResourceTree id="resourceTree" requestInitialDataAutomatically="true" serviceId="ResourceTreeStatefulService" clientIdPrefix="Resource Tree"
			width="30%" height="100%" doubleClick="doubleClickHandler(event)" doubleClickEnabled="true" showRoot="true"/-->
		<ui:PermissionsPanel id="permissionsPanel" width="100%" height="100%"/>		
	</mx:HDividedBox>
</mx:VBox>