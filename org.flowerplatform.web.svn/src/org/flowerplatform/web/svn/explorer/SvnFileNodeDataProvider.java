package org.flowerplatform.web.svn.explorer;

import java.util.List;

import org.flowerplatform.communication.stateful_service.StatefulServiceInvocationContext;
import org.flowerplatform.communication.tree.GenericTreeContext;
import org.flowerplatform.communication.tree.INodeDataProvider;
import org.flowerplatform.communication.tree.remote.PathFragment;
import org.flowerplatform.communication.tree.remote.TreeNode;
import org.tigris.subversion.subclipse.core.resources.RemoteFile;
import org.tigris.subversion.subclipse.core.resources.RemoteFolder;
import org.tigris.subversion.subclipse.core.resources.RemoteResource;
import org.tigris.subversion.svnclientadapter.utils.SVNUrlUtils;

/**
 * 
 * @author Victor Badila
 * 
 * @flowerModelElementId _MDgtwP3MEeKrJqcAep-lCg
 */
public class SvnFileNodeDataProvider implements INodeDataProvider {
	/**
	 * @flowerModelElementId _R5OFMP6CEeKrJqcAep-lCg
	 */
	public String getInplaceEditorText(
			StatefulServiceInvocationContext context,
			List<PathFragment> fullPath) {
		// TODO Auto-generated by Flower Dev Center
		// return super.getInplaceEditorText(context, fullPath);
		return null;
	}

	/**
	 * @flowerModelElementId _R5nGwP6CEeKrJqcAep-lCg
	 */
	public String getLabelForLog(Object node, String nodeType) {
		// TODO Auto-generated by Flower Dev Center
		// return super.getLabelForLog(node, nodeType);
		return null;
	}

	/**
	 * @flowerModelElementId _R5724P6CEeKrJqcAep-lCg
	 */
	public PathFragment getPathFragmentForNode(Object node, String nodeType,
			GenericTreeContext context) {
		String nodeSpecificPath = ((RemoteResource) node).getName();
		return new PathFragment(nodeSpecificPath, "svnFile");
		
	}

	/**
	 * @flowerModelElementId _R6P_8P6CEeKrJqcAep-lCg
	 */
	public boolean populateTreeNode(Object source, TreeNode destination,
			GenericTreeContext context) {

		destination.setLabel(((RemoteResource) source).getName());
		if (source instanceof RemoteFolder) {
			destination
					.setIcon("servlet/public-resources/org.flowerplatform.web.svn/images/folder_pending.gif");
			
		} //sigur este RemoteFile atunci
		else destination.setIcon("servlet/public-resources/org.flowerplatform.web.svn/images/file.gif");
		
		return true;
	}

	/**
	 * @flowerModelElementId _R6pBgP6CEeKrJqcAep-lCg
	 */
	public boolean setInplaceEditorText(
			StatefulServiceInvocationContext context, List<PathFragment> path,
			String text) {
		// TODO Auto-generated by Flower Dev Center
		// return super.setInplaceEditorText(context, path, text);
		return false;
	}
}