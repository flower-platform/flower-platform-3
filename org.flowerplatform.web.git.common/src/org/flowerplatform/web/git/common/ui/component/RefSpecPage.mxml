<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	Contributors:
	  Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.
 
	license-end
-->
<!--
@author Cristina Constantinescu
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 implements="org.flowerplatform.flexutil.dialog.IDialogResultHandler" >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.web.git.common.ui.EditRefSpecView;
		
			[Bindable]
			public var refMappings:ArrayCollection = new ArrayCollection();
			
			private var lastBtnPressed:Button;
				
			/**
			 * 
			 */
			public function getRefMappings():ArrayCollection {
				if (refMappings == null) { 
					return new ArrayCollection();
				}
				return refMappings;
			}
			
			private function addHandler():void {
				lastBtnPressed = btnAdd;				
				var popUp:EditRefSpecView = new EditRefSpecView();				
				popUp.currentRef = "";
				popUp.setResultHandler(this);
				FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()
					.setPopupContent(popUp)
					.show();
			}
			
			private function editHandler():void {
				lastBtnPressed = btnEdit;				
				var popUp:EditRefSpecView = new EditRefSpecView();				
				popUp.currentRef = String(lstRefMappings.selectedItem);
				popUp.setResultHandler(this);
				FlexUtilGlobals.getInstance().popupHandlerFactory.createPopupHandler()
					.setPopupContent(popUp)
					.show();
			}
			
			private function deleteHandler():void {
				refMappings.removeItemAt(lstRefMappings.selectedIndex);
			}
			
			public function handleDialogResult(result:Object):void {
				if (result == null) {
					return;
				}
				if (lastBtnPressed == btnAdd) {					
					refMappings.addItem(result);
				} else if (lastBtnPressed == btnEdit) {
					refMappings.setItemAt(result, lstRefMappings.selectedIndex);
				}
			}			
			
		]]>
	</fx:Script>
	
	<s:layout>
		<s:HorizontalLayout horizontalAlign="center" />
	</s:layout>
	
	<s:List id="lstRefMappings" width="100%" height="100%" dataProvider="{refMappings}"  />
	<s:VGroup gap="2">
		<s:Button id="btnAdd" width="70" label="{CommonPlugin.getInstance().getMessage('add')}" 
				   click="addHandler()"/>
		<s:Button id="btnEdit" width="70" label="{CommonPlugin.getInstance().getMessage('edit')}" 
				   click="editHandler()" enabled="{lstRefMappings.selectedItem != null}" />
		<s:Button id="btnDelete" width="70" label="{CommonPlugin.getInstance().getMessage('delete')}" 
				   click="deleteHandler()" enabled="{lstRefMappings.selectedItem != null}"/>
	</s:VGroup>
		
</s:Group>