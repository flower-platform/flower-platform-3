<?xml version="1.0" encoding="utf-8"?>
<!--
@author Cristina Constantinescu
-->
<popup:Wizard xmlns:fx="http://www.adobe.com/2006/mxml" 
			  xmlns:s="library://ns.adobe.com/flex/spark" 
			  xmlns:mx="library://ns.adobe.com/flex/mx" 
			  xmlns:popup="org.flowerplatform.flexutil.popup.*"
			  xmlns:component="org.flowerplatform.web.git.common.ui.component.*" >
	<fx:Script>
		<![CDATA[
			import com.crispico.flower.util.spinner.ModalSpinner;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.tree.remote.TreeNode;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.web.git.common.GitCommonPlugin;
			import org.flowerplatform.web.git.common.remote.dto.ImportProjectPageDto;
			import org.flowerplatform.web.git.common.remote.dto.ProjectDto;

			public var node:TreeNode;
			
			[Bindable]
			private var dto:ImportProjectPageDto;
						
			override public function set popupHost(value:IPopupHost):void {
				super.popupHost = value;
				popupHost.setLabel(GitCommonPlugin.getInstance().getMessage('git.action.importProjects.label'));
				popupHost.setIcon(GitCommonPlugin.getInstance().getResourceUrl('images/full/obj16/import_prj.gif'));
			}
			
			protected override function creationCompleteHandler():void {
				super.creationCompleteHandler();
				
				wizardImage.source = GitCommonPlugin.getInstance().getResourceUrl("images/newconnect_wizban.png");
				
				popupHost.showSpinner(CommonPlugin.getInstance().getMessage('spinner.gettingData'));
				// get data from server to populate current page
				GitCommonPlugin.getInstance().service.getProjects(node, this, getProjectsCallbackHandler);
			}
				
			private function getProjectsCallbackHandler(result:ImportProjectPageDto):void {
				popupHost.hideSpinner();
				if (result != null) {
					dto = result;
				} else {
					super.removePopup();
				}
			}
					
			/**
			 * @flowerModelElementId _gORZ4DV5EeKsnMbt6YrXWQ
			 */
			protected override function finishClickHandler():void {				
				var selectedProjects:ArrayCollection = new ArrayCollection();
				if (selectedProjects.length == 0) {								
					for each (var project:ProjectDto in dto.existingProjects) {
						if (project.getSelected()) {
							selectedProjects.addItem(project);
						}
					}
				}
				GitCommonPlugin.getInstance().service.importProjects(selectedProjects, null, null);	
				super.finishClickHandler();
			}			
							
		]]>
	</fx:Script>
		
	<popup:states>				
		<mx:State name="0">			
			<mx:SetProperty name="wizardTitle" value="{GitCommonPlugin.getInstance().getMessage('git.importProjects.title')}"/>
			<mx:SetProperty name="wizardDescription" value="{GitCommonPlugin.getInstance().getMessage('git.importProjects.description')}"/>	
			<mx:SetProperty target="{next}" name="visible" value="false"/>
			<mx:SetProperty target="{back}" name="visible" value="false"/>
			
			<mx:AddChild relativeTo="{contentArea}">
				<s:VGroup id="projectsArea" width="100%" height="100%" verticalAlign="middle">	
						<s:Label text="{GitCommonPlugin.getInstance().getMessage('git.importProjects.listProjects.projects')}" />
						<s:List width="100%" height="100%" id="list" dataProvider="{dto.existingProjects}">			
							<s:itemRenderer>
								<fx:Component>
									<s:ItemRenderer>						
											<fx:Script>
												<![CDATA[
													import org.flowerplatform.flexutil.FlexUtilGlobals;
													import org.flowerplatform.web.git.common.GitCommonPlugin;
													import org.flowerplatform.web.git.common.remote.dto.ProjectDto;
												]]>
											</fx:Script>
											<s:HGroup verticalAlign="middle" horizontalAlign="center" gap="5" paddingLeft="5">	
												<s:CheckBox id="cbSelected" click="{ProjectDto(data).setSelected(!ProjectDto(data).getSelected())}" selected="{ProjectDto(data).getSelected()}" />
												<s:BitmapImage id="image" source="{FlexUtilGlobals.getInstance().createAbsoluteUrl(GitCommonPlugin.getInstance().getResourceUrl('images/project.gif'))}"/>				                    
												<s:Label id="nameTxt" text="{data.name}"/>									
											</s:HGroup>	
										</s:ItemRenderer>					
								</fx:Component>
							</s:itemRenderer>
						</s:List>					
					</s:VGroup>						
			</mx:AddChild>			
		</mx:State>		
	</popup:states>
	
</popup:Wizard>