<?xml version="1.0" encoding="utf-8"?>
<!--
@author Cristina Constantinescu
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
		 implements="org.flowerplatform.flexutil.popup.IPopupContent"
		 creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			import mx.validators.Validator;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.service.InvokeServiceMethodServerCommand;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.Utils;
			import org.flowerplatform.flexutil.popup.IAction;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.web.git.common.GitCommonPlugin;
					
			public var logging:Boolean = true;
			
			public var user:String;	
			public var repositoryURI:String;		
			public var command:InvokeServiceMethodServerCommand;	
			
			private var _popupHost:IPopupHost;
			
			public function getActions(selection:IList):Vector.<IAction>{
				return null;
			}
			
			public function getSelection():IList {
				return null;
			}
			
			public function get popupHost():IPopupHost {
				return _popupHost;
			}
			
			public function set popupHost(value:IPopupHost):void {
				_popupHost = value;				
				popupHost.setLabel(GitCommonPlugin.getInstance().getMessage(logging ? 'git.login.title' : 'git.changeCredentials.title'));
				popupHost.setIcon(GitCommonPlugin.getInstance().getResourceUrl('images/permission.png'));
			}
			
			public function okHandler():void {
				// validate form
				if (Validator.validateAll([usernameValidator]).length > 0) {
					return;
				}
				if (logging) {
					GitCommonPlugin.getInstance().service.login(repositoryURI, username.text, password.text, command);
				} else {
					GitCommonPlugin.getInstance().service.changeCredentials(repositoryURI, username.text, password.text);
				}				
				cancelHandler();
			}
		
			public function cancelHandler():void {			
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);	
			}
						
			protected function creationCompleteHandler(event:FlexEvent):void {
				popupHost.addToControlBar(buttonBar);
			}
			
			override protected function createChildren():void {
				super.createChildren();
				
				if (!FlexUtilGlobals.getInstance().isMobile) {
					addElement(comment);
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:StringValidator id="usernameValidator" source="{username}" property="text" minLength="1"/>
		
		<s:HGroup id="buttonBar" width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Button id="ok" label="{CommonPlugin.getInstance().getMessage('ok')}" click="okHandler()" width="80"/>
			<s:Button id="cancel" label="{CommonPlugin.getInstance().getMessage('cancel')}" click="cancelHandler()" width="80"/>			
		</s:HGroup>
		
		<s:Label id="comment" text="{GitCommonPlugin.getInstance().getMessage('git.login.message')}" width="100%" />		
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
	</s:layout>
	
	<s:Form id="form" height="100%" width="100%" >			
		<s:FormItem label="{GitCommonPlugin.getInstance().getMessage('git.login.repository')}" width="100%">
			<mx:TextInput id="repository" text="{repositoryURI}" initialize="Utils.makePseudoDisabled(repository)" width="100%"/>
		</s:FormItem>
		
		<s:FormItem label="{GitCommonPlugin.getInstance().getMessage('git.login.username')}" width="100%">
			<s:TextInput id="username" text="{user}" width="100%" creationComplete="{callLater(username.setFocus)}"/>
		</s:FormItem>
		
		<s:FormItem label="{GitCommonPlugin.getInstance().getMessage('git.login.password')}" width="100%">
			<s:TextInput id="password" displayAsPassword="true" width="100%"/>
		</s:FormItem>
	</s:Form>	
	
</s:Group>
