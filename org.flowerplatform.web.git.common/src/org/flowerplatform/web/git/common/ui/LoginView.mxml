<?xml version="1.0" encoding="utf-8"?>
<!-- 
	license-start
 
	Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.
	
	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation version 3.
	 
	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details, at <http://www.gnu.org/licenses/>.
	
	Contributors:
	  Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.
 
	license-end
-->
<!--
@author Cristina Constantinescu
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
		 implements="org.flowerplatform.flexutil.view_content_host.IViewContent"
		 creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import mx.collections.IList;
			import mx.events.FlexEvent;
			import mx.validators.Validator;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.service.InvokeServiceMethodServerCommand;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.Utils;
			import org.flowerplatform.flexutil.action.IAction;
			import org.flowerplatform.flexutil.view_content_host.IViewHost;
			import org.flowerplatform.web.git.common.GitCommonPlugin;
					
			public var logging:Boolean = true;
			
			public var user:String;	
			public var repositoryURI:String;		
			public var command:InvokeServiceMethodServerCommand;	
			
			private var _viewHost:IViewHost;
			
			public function getActions(selection:IList):Vector.<IAction>{
				return null;
			}
			
			public function getSelection():IList {
				return null;
			}
			
			public function get viewHost():IViewHost {
				return _viewHost;
			}
			
			public function set viewHost(value:IViewHost):void {
				_viewHost = value;				
				viewHost.setLabel(GitCommonPlugin.getInstance().getMessage(logging ? 'git.login.title' : 'git.changeCredentials.title'));
				viewHost.setIcon(GitCommonPlugin.getInstance().getResourceUrl('images/permission.png'));
			}
			
			public function okHandler():void {
				// validate form
				if (Validator.validateAll([usernameValidator]).length > 0) {
					return;
				}
				if (logging) {
					GitCommonPlugin.getInstance().service.login(repositoryURI, username.text, password.text, command);
				} else {
					GitCommonPlugin.getInstance().service.changeCredentials(repositoryURI, username.text, password.text);
				}				
				cancelHandler();
			}
		
			public function cancelHandler():void {			
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);	
			}
						
			protected function creationCompleteHandler(event:FlexEvent):void {
				viewHost.addToControlBar(buttonBar);
			}
			
			override protected function createChildren():void {
				super.createChildren();
				
				if (!FlexUtilGlobals.getInstance().isMobile) {
					addElement(comment);
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:StringValidator id="usernameValidator" source="{username}" property="text" minLength="1"/>
		
		<s:HGroup id="buttonBar" width="100%" horizontalAlign="center" verticalAlign="middle">
			<s:Button id="ok" label="{CommonPlugin.getInstance().getMessage('ok')}" click="okHandler()" width="80"/>
			<s:Button id="cancel" label="{CommonPlugin.getInstance().getMessage('cancel')}" click="cancelHandler()" width="80"/>			
		</s:HGroup>
		
		<s:Label id="comment" text="{GitCommonPlugin.getInstance().getMessage('git.login.message')}" width="100%" />		
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout verticalAlign="middle" horizontalAlign="center"/>
	</s:layout>
	
	<s:Form id="form" height="100%" width="100%" >			
		<s:FormItem label="{GitCommonPlugin.getInstance().getMessage('git.login.repository')}" width="100%">
			<mx:TextInput id="repository" text="{repositoryURI}" initialize="Utils.makePseudoDisabled(repository)" width="100%"/>
		</s:FormItem>
		
		<s:FormItem label="{GitCommonPlugin.getInstance().getMessage('git.login.username')}" width="100%">
			<s:TextInput id="username" text="{user}" width="100%" creationComplete="{callLater(username.setFocus)}"/>
		</s:FormItem>
		
		<s:FormItem label="{GitCommonPlugin.getInstance().getMessage('git.login.password')}" width="100%">
			<s:TextInput id="password" displayAsPassword="true" width="100%"/>
		</s:FormItem>
	</s:Form>	
	
</s:Group>