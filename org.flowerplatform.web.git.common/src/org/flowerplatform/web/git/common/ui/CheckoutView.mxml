<?xml version="1.0" encoding="utf-8"?>
<!--
@author Cristina Constantinescu
-->
<popup:Wizard  xmlns:popup="org.flowerplatform.flexutil.popup.*"		   
			   xmlns:fx="http://www.adobe.com/2006/mxml" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   
			   getIndexForStateFunction="getIndexForState" >
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			
			import org.flowerplatform.common.CommonPlugin;
			import org.flowerplatform.communication.tree.remote.TreeNode;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.web.git.common.GitCommonPlugin;
			import org.flowerplatform.web.git.common.remote.dto.GitRef;
			import org.flowerplatform.web.git.common.remote.dto.RemoteConfig;
			
			import spark.events.IndexChangeEvent;
		
			public var node:TreeNode;
			
			override public function set popupHost(value:IPopupHost):void {
				super.popupHost = value;
				popupHost.setLabel(GitCommonPlugin.getInstance().getMessage('git.action.checkout.label'));
				popupHost.setIcon(GitCommonPlugin.getInstance().getResourceUrl('images/full/obj16/checkout.gif'));
			}
			
			override protected function creationCompleteHandler():void {
				super.creationCompleteHandler();
				wizardImage.source = GitCommonPlugin.getInstance().getResourceUrl("images/newconnect_wizban.png");
				
				callLater(brName.setFocus);
				if (node.pathFragment.type == GitCommonPlugin.NODE_TYPE_REMOTE_BRANCHES) {
					popupHost.showSpinner(CommonPlugin.getInstance().getMessage("spinner.gettingData"));
					GitCommonPlugin.getInstance().service.getAllRemotes(node, this, getAllRemotesCallbackHandler);
				} else {
					upstreamPanel.visible = false;
				}
			}
		
			private function getAllRemotesCallbackHandler(result:ArrayCollection):void {
				popupHost.hideSpinner();
				if (result != null) {
					cbRemotes.dataProvider = result;
					cbRemotes.selectedIndex = 0;
					cbRemotes_changeHandler(null);
				}
			}
			
			protected function cbRemotes_changeHandler(event:IndexChangeEvent):void 	{
				popupHost.showSpinner(CommonPlugin.getInstance().getMessage("spinner.gettingData"));
				GitCommonPlugin.getInstance().service.getBranches(RemoteConfig(cbRemotes.selectedItem).uri, this, getRemoteBranchesCallbackHandler);
			}
			
			private function getRemoteBranchesCallbackHandler(result:ArrayCollection):void {
				popupHost.hideSpinner();
				if (result != null) {
					cbRemoteBranches.dataProvider = result[0];
				} else {
					cbRemoteBranches.dataProvider = null;
				}
			}
			
			protected override function finishClickHandler():void {
				if (node.pathFragment.type == GitCommonPlugin.NODE_TYPE_REMOTE_BRANCHES) {
					if (cbRemotes.selectedItem == null || cbRemoteBranches.selectedItem == null) {
						FlexUtilGlobals.getInstance().messageBoxFactory.createMessageBox()
							.setTitle(CommonPlugin.getInstance().getMessage("error"))
							.setText("Set the upstream branch configuration!")
							.showMessageBox();
						return;
					}
				}
				popupHost.showSpinner(CommonPlugin.getInstance().getMessage("spinner.processing"));
				GitCommonPlugin.getInstance().service.checkout(node, brName.text, GitRef(cbRemoteBranches.selectedItem), RemoteConfig(cbRemotes.selectedItem), cbRebase.selected, this, checkoutBranchCallbackHandler);
			}
			
			private function checkoutBranchCallbackHandler(result:Boolean):void {
				popupHost.hideSpinner();
				if (result) {
					super.finishClickHandler();
				}				
			}
			
			private function getIndexForState(stateName:String):int {
				if (stateName == "checkoutPage") {
					return 0;
				}
				return 1;
			}
		]]>
	</fx:Script>
	
	<popup:states>				
		<mx:State name="checkoutPage">			
			<mx:SetProperty name="wizardTitle" value="{GitCommonPlugin.getInstance().getMessage('git.checkoutBranch.title')}"/>
			<mx:SetProperty target="{finish}" name="enabled" value="{brName.text != ''}"/>
			<mx:SetProperty target="{next}" name="visible" value="false"/>
			<mx:SetProperty target="{back}" name="visible" value="false"/>
			
			<mx:AddChild relativeTo="{contentArea}">							
					<s:VGroup width="100%" height="100%" horizontalAlign="center">						
						<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
							<s:Label text="{GitCommonPlugin.getInstance().getMessage('git.checkoutBranch.branch.label')}" />
							<s:TextInput id="brName" width="100%"/>													
						</s:HGroup>		
						<s:VGroup width="100%" id="upstreamPanel" >
							<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
								<s:Label text="{GitCommonPlugin.getInstance().getMessage('git.checkoutBranch.remote.label')}"/>
								<s:ComboBox id="cbRemotes" width="100%" labelField="name" change="cbRemotes_changeHandler(event)"/>
							</s:HGroup>
							<s:HGroup width="100%" verticalAlign="middle" horizontalAlign="center">
								<s:Label text="{GitCommonPlugin.getInstance().getMessage('git.checkoutBranch.upstream.label')}"/>
								<s:ComboBox id="cbRemoteBranches" width="100%" labelField="name"/>								
							</s:HGroup>
							<s:CheckBox id="cbRebase" label="{GitCommonPlugin.getInstance().getMessage('git.configBranch.rebase')}" />
						</s:VGroup>
					</s:VGroup>							
			</mx:AddChild>
		</mx:State>	
	</popup:states>
	
</popup:Wizard>