<?xml version="1.0" encoding="utf-8"?>
<!-- 
license-start

Copyright (C) 2008 - 2013 Crispico, <http://www.crispico.com/>.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation version 3.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details, at <http://www.gnu.org/licenses/>.

Contributors:
Crispico - Initial API and implementation  The product is licensed under GPL. This is the new version of the license.

license-end
-->
<!--
@author Victor Badila
-->

<popup:Wizard 
	xmlns:fx="http://www.adobe.com/2006/mxml"
	xmlns:s="library://ns.adobe.com/flex/spark"
	xmlns:popup="org.flowerplatform.flexutil.popup.*"
	xmlns:mx="library://ns.adobe.com/flex/mx">
	
	<fx:Script>	
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.IList;
			
			import org.flowerplatform.communication.tree.remote.PathFragment;
			
			import org.flowerplatform.communication.CommunicationPlugin;
			import org.flowerplatform.communication.service.InvokeServiceMethodServerCommand;
			import org.flowerplatform.communication.tree.remote.TreeNode;
			import org.flowerplatform.flexutil.FlexUtilGlobals;
			import org.flowerplatform.flexutil.popup.IPopupHost;
			import org.flowerplatform.web.svn.common.SvnCommonPlugin;
			
			public var selection:ArrayCollection;
			
			[Bindable]
			public var defaultPattern:String = "";
			
			protected override function creationCompleteHandler():void {
				super.creationCompleteHandler();
				if (selection.length>1) {					
					defaultPattern = "*";
				} else {
					var element:ArrayCollection = ArrayCollection(selection.getItemAt(0));
					defaultPattern = PathFragment(ArrayCollection(element).getItemAt(element.length-1)).name;
				}
				callLater(patternTxt.setFocus);
			}
			
			public override function set popupHost(value:IPopupHost):void {
				_popupHost = value;				
				_popupHost.setLabel(SvnCommonPlugin.getInstance().getMessage("svn.action.addToSvnIgnore.view.label"));
				_popupHost.setIcon(SvnCommonPlugin.getInstance().getResourceUrl("images/ignore.gif"));
			}
			
			protected override function finishClickHandler():void {
				//popupHost.showSpinner(SvnCommonPlugin.getInstance().getMessage("svn.ui.addToSvnIgnore.spinner"));
				CommunicationPlugin.getInstance().bridge.sendObject(
					new InvokeServiceMethodServerCommand("svnService", "addToSvnIgnore", [selection, patternTxt.text], this));
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);
			}
			
			protected override function cancelClickHandler():void {
				FlexUtilGlobals.getInstance().popupHandlerFactory.removePopup(this);		
			}
			
		]]>		
		
	</fx:Script>
	<popup:states>
		<mx:State name="0">	
			<mx:AddChild relativeTo="{contentArea}">
				<s:VGroup width="100%" height="100%">
					<s:Label text="{SvnCommonPlugin.getInstance().getMessage('svn.ui.addToSvnIgnoreView.patternLabel')}"/>
					<s:TextInput width="100%" id="patternTxt" text="{defaultPattern}"/>		
				</s:VGroup>
			</mx:AddChild>
		</mx:State>					
	</popup:states>	
	
</popup:Wizard>
